<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/ABC/Apartment-Selling-Platform-main/src/main/resources/static/reviews.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/ABC/Apartment-Selling-Platform-main/src/main/resources/static/reviews.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Reviews - PropertyHub&lt;/title&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css&quot;&gt;&#10;    &lt;style&gt;&#10;        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&amp;display=swap');&#10;&#10;        :root {&#10;            /* Light Mode Variables */&#10;            --bg-primary-light: #F9FAFB;&#10;            --bg-secondary-light: #FFFFFF;&#10;            --text-primary-light: #111827;&#10;            --text-secondary-light: #6B7280;&#10;            --primary-light: #4F46E5;&#10;            --secondary-light: #06B6D4;&#10;            --accent-light: #F59E0B;&#10;            --shadow-light: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);&#10;            --border-light: rgba(79, 70, 229, 0.1);&#10;            --success-light: #22C55E;&#10;            --error-light: #EF4444;&#10;&#10;            /* Dark Mode Variables */&#10;            --bg-primary-dark: #1F2937;&#10;            --bg-secondary-dark: #374151;&#10;            --text-primary-dark: #F3F4F6;&#10;            --text-secondary-dark: #D1D5DB;&#10;            --primary-dark: #818CF8;&#10;            --secondary-dark: #22D3EE;&#10;            --accent-dark: #FBBF24;&#10;            --shadow-dark: 0 4px 6px -1px rgba(0, 0, 0, 0.3), 0 2px 4px -1px rgba(0, 0, 0, 0.2);&#10;            --border-dark: rgba(129, 140, 248, 0.2);&#10;            --success-dark: #4ADE80;&#10;            --error-dark: #F87171;&#10;&#10;            /* Default to Light Mode */&#10;            --bg-primary: var(--bg-primary-light);&#10;            --bg-secondary: var(--bg-secondary-light);&#10;            --text-primary: var(--text-primary-light);&#10;            --text-secondary: var(--text-secondary-light);&#10;            --primary: var(--primary-light);&#10;            --secondary: var(--secondary-light);&#10;            --accent: var(--accent-light);&#10;            --shadow: var(--shadow-light);&#10;            --border: var(--border-light);&#10;            --success: var(--success-light);&#10;            --error: var(--error-light);&#10;            --transition: all 0.3s ease;&#10;        }&#10;&#10;        [data-theme=&quot;dark&quot;] {&#10;            --bg-primary: var(--bg-primary-dark);&#10;            --bg-secondary: var(--bg-secondary-dark);&#10;            --text-primary: var(--text-primary-dark);&#10;            --text-secondary: var(--text-secondary-dark);&#10;            --primary: var(--primary-dark);&#10;            --secondary: var(--secondary-dark);&#10;            --accent: var(--accent-dark);&#10;            --shadow: var(--shadow-dark);&#10;            --border: var(--border-dark);&#10;            --success: var(--success-dark);&#10;            --error: var(--error-dark);&#10;        }&#10;&#10;        * {&#10;            margin: 0;&#10;            padding: 0;&#10;            box-sizing: border-box;&#10;            font-family: 'Poppins', sans-serif;&#10;        }&#10;&#10;        body {&#10;            background-color: var(--bg-primary);&#10;            color: var(--text-primary);&#10;            line-height: 1.6;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .container {&#10;            width: 100%;&#10;            max-width: 1280px;&#10;            margin: 0 auto;&#10;            padding: 0 20px;&#10;        }&#10;&#10;        /* Header Styles */&#10;        header {&#10;            background-color: var(--bg-secondary);&#10;            box-shadow: var(--shadow);&#10;            position: sticky;&#10;            top: 0;&#10;            z-index: 100;&#10;        }&#10;&#10;        .header-top {&#10;            display: flex;&#10;            justify-content: space-between;&#10;            align-items: center;&#10;            padding: 20px 0;&#10;        }&#10;&#10;        .logo {&#10;            font-size: 28px;&#10;            font-weight: 700;&#10;            color: var(--primary);&#10;            text-decoration: none;&#10;            display: flex;&#10;            align-items: center;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .logo:hover {&#10;            transform: scale(1.05);&#10;        }&#10;&#10;        .logo i {&#10;            margin-right: 12px;&#10;        }&#10;&#10;        .nav-menu {&#10;            display: flex;&#10;            list-style: none;&#10;        }&#10;&#10;        .nav-menu li {&#10;            margin: 0 20px;&#10;        }&#10;&#10;        .nav-menu a {&#10;            text-decoration: none;&#10;            color: var(--text-primary);&#10;            font-weight: 500;&#10;            transition: var(--transition);&#10;            padding: 10px 15px;&#10;            border-radius: 8px;&#10;        }&#10;&#10;        .nav-menu a:hover, .nav-menu a.active {&#10;            color: var(--primary);&#10;            background-color: rgba(var(--primary-rgb, 79, 70, 229), 0.05);&#10;        }&#10;&#10;        .auth-buttons {&#10;            display: flex;&#10;            align-items: center;&#10;        }&#10;&#10;        .btn {&#10;            padding: 12px 24px;&#10;            border-radius: 8px;&#10;            font-weight: 500;&#10;            cursor: pointer;&#10;            transition: var(--transition);&#10;            border: none;&#10;            font-size: 16px;&#10;        }&#10;&#10;        .btn-login {&#10;            background: transparent;&#10;            color: var(--primary);&#10;            border: 1px solid var(--primary);&#10;            margin-right: 12px;&#10;        }&#10;&#10;        .btn-signup {&#10;            background-color: var(--primary);&#10;            color: var(--bg-secondary);&#10;            border: 1px solid var(--primary);&#10;        }&#10;&#10;        .btn-login:hover {&#10;            background-color: rgba(var(--primary-rgb, 79, 70, 229), 0.05);&#10;            transform: translateY(-2px);&#10;        }&#10;&#10;        .btn-signup:hover {&#10;            background-color: var(--primary-dark, #4338CA);&#10;            transform: translateY(-2px);&#10;        }&#10;&#10;        .theme-toggle {&#10;            background: none;&#10;            border: none;&#10;            color: var(--text-primary);&#10;            font-size: 20px;&#10;            cursor: pointer;&#10;            padding: 10px;&#10;            border-radius: 50%;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .theme-toggle:hover {&#10;            background-color: rgba(var(--primary-rgb, 79, 70, 229), 0.05);&#10;            transform: scale(1.1);&#10;        }&#10;&#10;        /* User Dropdown Styles */&#10;        .user-dropdown {&#10;            position: relative;&#10;            display: none;&#10;        }&#10;&#10;        .user-trigger {&#10;            display: flex;&#10;            align-items: center;&#10;            gap: 12px;&#10;            cursor: pointer;&#10;            padding: 10px 18px;&#10;            border-radius: 30px;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .user-trigger:hover {&#10;            background-color: rgba(var(--primary-rgb, 79, 70, 229), 0.05);&#10;            transform: translateY(-2px);&#10;        }&#10;&#10;        .user-avatar {&#10;            width: 40px;&#10;            height: 40px;&#10;            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);&#10;            border-radius: 50%;&#10;            display: flex;&#10;            align-items: center;&#10;            justify-content: center;&#10;            color: var(--bg-secondary);&#10;            font-weight: 600;&#10;            font-size: 16px;&#10;        }&#10;&#10;        .user-name {&#10;            color: var(--primary);&#10;            font-weight: 500;&#10;            font-size: 16px;&#10;        }&#10;&#10;        .dropdown-arrow {&#10;            color: var(--primary);&#10;            font-size: 14px;&#10;            transition: transform 0.3s;&#10;        }&#10;&#10;        .user-dropdown.active .dropdown-arrow {&#10;            transform: rotate(180deg);&#10;        }&#10;&#10;        .user-dropdown-menu {&#10;            position: absolute;&#10;            top: 100%;&#10;            right: 0;&#10;            background: var(--bg-secondary);&#10;            border-radius: 16px;&#10;            box-shadow: var(--shadow);&#10;            border: 1px solid var(--border);&#10;            min-width: 280px;&#10;            z-index: 1000;&#10;            opacity: 0;&#10;            visibility: hidden;&#10;            transform: translateY(-10px);&#10;            transition: var(--transition);&#10;            margin-top: 8px;&#10;        }&#10;&#10;        .user-dropdown-menu.show {&#10;            opacity: 1;&#10;            visibility: visible;&#10;            transform: translateY(0);&#10;        }&#10;&#10;        .dropdown-header {&#10;            padding: 24px;&#10;            display: flex;&#10;            align-items: center;&#10;            gap: 14px;&#10;        }&#10;&#10;        .user-avatar-large {&#10;            width: 55px;&#10;            height: 55px;&#10;            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);&#10;            border-radius: 50%;&#10;            display: flex;&#10;            align-items: center;&#10;            justify-content: center;&#10;            color: var(--bg-secondary);&#10;            font-weight: 600;&#10;            font-size: 20px;&#10;        }&#10;&#10;        .user-details {&#10;            display: flex;&#10;            flex-direction: column;&#10;        }&#10;&#10;        .user-name-large {&#10;            font-weight: 600;&#10;            color: var(--text-primary);&#10;            font-size: 18px;&#10;        }&#10;&#10;        .user-email {&#10;            color: var(--text-secondary);&#10;            font-size: 14px;&#10;            margin-top: 4px;&#10;        }&#10;&#10;        .dropdown-divider {&#10;            height: 1px;&#10;            background: var(--border);&#10;            margin: 0 12px;&#10;        }&#10;&#10;        .dropdown-menu-items {&#10;            padding: 12px 0;&#10;            list-style: none;&#10;            margin: 0;&#10;        }&#10;&#10;        .dropdown-menu-items a {&#10;            display: flex;&#10;            align-items: center;&#10;            gap: 14px;&#10;            padding: 14px 24px;&#10;            color: var(--text-primary);&#10;            text-decoration: none;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .dropdown-menu-items a:hover {&#10;            background-color: rgba(var(--primary-rgb, 79, 70, 229), 0.05);&#10;            color: var(--primary);&#10;        }&#10;&#10;        .dropdown-menu-items i {&#10;            width: 20px;&#10;            text-align: center;&#10;            color: var(--text-secondary);&#10;        }&#10;&#10;        .dropdown-menu-items a:hover i {&#10;            color: var(--primary);&#10;        }&#10;&#10;        .dropdown-footer {&#10;            padding: 12px 24px 24px;&#10;        }&#10;&#10;        .btn-logout-dropdown {&#10;            width: 100%;&#10;            padding: 12px;&#10;            background: rgba(var(--primary-rgb, 79, 70, 229), 0.05);&#10;            color: var(--error);&#10;            border: 1px solid var(--border);&#10;            border-radius: 10px;&#10;            cursor: pointer;&#10;            font-weight: 500;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .btn-logout-dropdown:hover {&#10;            background: rgba(var(--error-rgb, 239, 68, 68), 0.05);&#10;            border-color: var(--error);&#10;        }&#10;&#10;        /* Reviews Page Styles */&#10;        .reviews-page {&#10;            padding: 80px 0;&#10;            min-height: 80vh;&#10;        }&#10;&#10;        .reviews-header {&#10;            display: flex;&#10;            justify-content: space-between;&#10;            align-items: center;&#10;            margin-bottom: 40px;&#10;        }&#10;&#10;        .reviews-header h1 {&#10;            font-size: 3em;&#10;            color: var(--text-primary);&#10;            font-weight: 700;&#10;        }&#10;&#10;        .btn-primary {&#10;            padding: 12px 24px;&#10;            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);&#10;            color: var(--bg-secondary);&#10;            border: none;&#10;            border-radius: 8px;&#10;            cursor: pointer;&#10;            font-weight: 600;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .btn-primary:hover {&#10;            transform: translateY(-2px);&#10;            box-shadow: 0 4px 6px rgba(var(--primary-rgb, 79, 70, 229), 0.2);&#10;        }&#10;&#10;        .review-stats {&#10;            display: grid;&#10;            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));&#10;            gap: 20px;&#10;            margin-bottom: 40px;&#10;        }&#10;&#10;        .stat-card {&#10;            background: var(--bg-secondary);&#10;            padding: 25px;&#10;            border-radius: 12px;&#10;            box-shadow: var(--shadow);&#10;            text-align: center;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .stat-card:hover {&#10;            transform: translateY(-5px);&#10;        }&#10;&#10;        .stat-card h3 {&#10;            font-size: 2.5em;&#10;            color: var(--primary);&#10;            margin-bottom: 8px;&#10;        }&#10;&#10;        .stat-card p {&#10;            color: var(--text-secondary);&#10;            font-size: 1.1em;&#10;        }&#10;&#10;        .rating-distribution {&#10;            display: flex;&#10;            flex-direction: column;&#10;            gap: 10px;&#10;            margin-top: 15px;&#10;        }&#10;&#10;        .rating-bar {&#10;            display: flex;&#10;            align-items: center;&#10;            gap: 10px;&#10;        }&#10;&#10;        .rating-stars {&#10;            color: var(--accent);&#10;            font-size: 1.1em;&#10;            min-width: 80px;&#10;        }&#10;&#10;        .rating-progress {&#10;            flex: 1;&#10;            height: 8px;&#10;            background: var(--border);&#10;            border-radius: 4px;&#10;            overflow: hidden;&#10;        }&#10;&#10;        .rating-fill {&#10;            height: 100%;&#10;            background: var(--accent);&#10;            transition: width 0.5s ease;&#10;        }&#10;&#10;        .rating-count {&#10;            color: var(--text-secondary);&#10;            min-width: 40px;&#10;            text-align: right;&#10;            font-size: 0.9em;&#10;        }&#10;&#10;        .review-form-container {&#10;            background: var(--bg-secondary);&#10;            border-radius: 15px;&#10;            padding: 30px;&#10;            margin-bottom: 40px;&#10;            box-shadow: var(--shadow);&#10;            display: none;&#10;        }&#10;&#10;        .review-form-container.show {&#10;            display: block;&#10;        }&#10;&#10;        .review-form h3 {&#10;            color: var(--text-primary);&#10;            margin-bottom: 20px;&#10;            font-size: 1.5em;&#10;        }&#10;&#10;        .form-group {&#10;            margin-bottom: 20px;&#10;        }&#10;&#10;        .form-group label {&#10;            display: block;&#10;            margin-bottom: 8px;&#10;            color: var(--text-primary);&#10;            font-weight: 500;&#10;        }&#10;&#10;        .star-rating {&#10;            display: flex;&#10;            gap: 8px;&#10;            margin-bottom: 15px;&#10;        }&#10;&#10;        .star {&#10;            font-size: 2.5em;&#10;            color: var(--border);&#10;            cursor: pointer;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .star:hover,&#10;        .star.active {&#10;            color: var(--accent);&#10;            transform: scale(1.1);&#10;        }&#10;&#10;        .form-group input,&#10;        .form-group textarea {&#10;            width: 100%;&#10;            padding: 12px 15px;&#10;            border: 2px solid var(--border);&#10;            border-radius: 8px;&#10;            font-size: 1em;&#10;            transition: var(--transition);&#10;            resize: vertical;&#10;            background: var(--bg-secondary);&#10;            color: var(--text-primary);&#10;        }&#10;&#10;        .form-group input:focus,&#10;        .form-group textarea:focus {&#10;            outline: none;&#10;            border-color: var(--primary);&#10;        }&#10;&#10;        .form-actions {&#10;            display: flex;&#10;            gap: 15px;&#10;            justify-content: flex-end;&#10;            margin-top: 25px;&#10;        }&#10;&#10;        .btn-secondary {&#10;            background: var(--text-secondary);&#10;            color: var(--bg-secondary);&#10;            border: none;&#10;            padding: 12px 24px;&#10;            border-radius: 8px;&#10;            cursor: pointer;&#10;            font-weight: 500;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .btn-secondary:hover {&#10;            background: var(--text-primary);&#10;        }&#10;&#10;        .reviews-section {&#10;            margin-bottom: 50px;&#10;        }&#10;&#10;        .section-title {&#10;            font-size: 1.8em;&#10;            color: var(--text-primary);&#10;            margin-bottom: 25px;&#10;            padding-bottom: 10px;&#10;            border-bottom: 2px solid var(--border);&#10;        }&#10;&#10;        .reviews-grid {&#10;            display: grid;&#10;            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));&#10;            gap: 25px;&#10;        }&#10;&#10;        .review-card {&#10;            background: var(--bg-secondary);&#10;            border-radius: 12px;&#10;            padding: 25px;&#10;            box-shadow: var(--shadow);&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .review-card:hover {&#10;            transform: translateY(-5px);&#10;            box-shadow: 0 10px 25px rgba(0,0,0,0.15);&#10;        }&#10;&#10;        .review-header {&#10;            display: flex;&#10;            justify-content: space-between;&#10;            align-items: flex-start;&#10;            margin-bottom: 15px;&#10;        }&#10;&#10;        .review-user {&#10;            display: flex;&#10;            align-items: center;&#10;            gap: 12px;&#10;        }&#10;&#10;        .user-avatar-small {&#10;            width: 45px;&#10;            height: 45px;&#10;            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);&#10;            border-radius: 50%;&#10;            display: flex;&#10;            align-items: center;&#10;            justify-content: center;&#10;            color: var(--bg-secondary);&#10;            font-weight: 600;&#10;            font-size: 16px;&#10;        }&#10;&#10;        .user-info h4 {&#10;            color: var(--text-primary);&#10;            margin-bottom: 4px;&#10;        }&#10;&#10;        .user-info .review-date {&#10;            color: var(--text-secondary);&#10;            font-size: 0.9em;&#10;        }&#10;&#10;        .review-rating {&#10;            color: var(--accent);&#10;            font-size: 1.3em;&#10;        }&#10;&#10;        .review-title {&#10;            font-size: 1.3em;&#10;            font-weight: 600;&#10;            margin-bottom: 12px;&#10;            color: var(--text-primary);&#10;            line-height: 1.4;&#10;        }&#10;&#10;        .review-comment {&#10;            color: var(--text-secondary);&#10;            line-height: 1.6;&#10;            margin-bottom: 20px;&#10;        }&#10;&#10;        .review-status {&#10;            display: inline-block;&#10;            padding: 4px 12px;&#10;            border-radius: 20px;&#10;            font-size: 0.85em;&#10;            font-weight: 500;&#10;        }&#10;&#10;        .status-approved {&#10;            background: rgba(var(--success-rgb, 34, 197, 94), 0.1);&#10;            color: var(--success);&#10;        }&#10;&#10;        .status-pending {&#10;            background: rgba(var(--accent-rgb, 245, 158, 11), 0.1);&#10;            color: var(--accent);&#10;        }&#10;&#10;        .review-actions {&#10;            display: flex;&#10;            gap: 10px;&#10;            margin-top: 15px;&#10;        }&#10;&#10;        .btn-edit, .btn-delete {&#10;            padding: 8px 16px;&#10;            border: none;&#10;            border-radius: 6px;&#10;            cursor: pointer;&#10;            font-size: 0.9em;&#10;            font-weight: 500;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .btn-edit {&#10;            background: var(--success);&#10;            color: var(--bg-secondary);&#10;        }&#10;&#10;        .btn-edit:hover {&#10;            background: var(--success-dark, #16A34A);&#10;        }&#10;&#10;        .btn-delete {&#10;            background: var(--error);&#10;            color: var(--bg-secondary);&#10;        }&#10;&#10;        .btn-delete:hover {&#10;            background: var(--error-dark, #DC2626);&#10;        }&#10;&#10;        .no-reviews {&#10;            text-align: center;&#10;            padding: 60px 20px;&#10;            background: var(--bg-secondary);&#10;            border-radius: 12px;&#10;            box-shadow: var(--shadow);&#10;        }&#10;&#10;        .no-reviews p {&#10;            font-size: 1.2em;&#10;            color: var(--text-secondary);&#10;            margin-bottom: 20px;&#10;        }&#10;&#10;        /* Footer */&#10;        footer {&#10;            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);&#10;            color: var(--bg-secondary);&#10;            padding: 60px 0 24px;&#10;            margin-top: 60px;&#10;            position: relative;&#10;            overflow: hidden;&#10;        }&#10;&#10;        .footer-content {&#10;            display: grid;&#10;            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));&#10;            gap: 36px;&#10;            margin-bottom: 36px;&#10;        }&#10;&#10;        .footer-column h3 {&#10;            font-size: 20px;&#10;            margin-bottom: 24px;&#10;            font-weight: 600;&#10;        }&#10;&#10;        .footer-column ul {&#10;            list-style: none;&#10;        }&#10;&#10;        .footer-column ul li {&#10;            margin-bottom: 12px;&#10;        }&#10;&#10;        .footer-column a {&#10;            color: var(--text-secondary);&#10;            text-decoration: none;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .footer-column a:hover {&#10;            color: var(--bg-secondary);&#10;        }&#10;&#10;        .copyright {&#10;            text-align: center;&#10;            padding-top: 24px;&#10;            border-top: 1px solid rgba(255, 255, 255, 0.1);&#10;            color: var(--text-secondary);&#10;            font-size: 14px;&#10;        }&#10;&#10;        /* Success/Error Messages */&#10;        .success-message, .error-message {&#10;            padding: 14px 18px;&#10;            border-radius: 12px;&#10;            margin-bottom: 24px;&#10;            text-align: center;&#10;            display: none;&#10;            font-size: 15px;&#10;        }&#10;&#10;        .success-message {&#10;            background: rgba(var(--success-rgb, 34, 197, 94), 0.1);&#10;            color: var(--success);&#10;            border: 1px solid rgba(var(--success-rgb, 34, 197, 94), 0.2);&#10;        }&#10;&#10;        .error-message {&#10;            background: rgba(var(--error-rgb, 239, 68, 68), 0.1);&#10;            color: var(--error);&#10;            border: 1px solid rgba(var(--error-rgb, 239, 68, 68), 0.2);&#10;        }&#10;&#10;        /* Loading States */&#10;        .loading {&#10;            opacity: 0.7;&#10;            pointer-events: none;&#10;        }&#10;&#10;        /* Responsive Design */&#10;        @media (max-width: 768px) {&#10;            .nav-menu {&#10;                display: none;&#10;            }&#10;&#10;            .reviews-header {&#10;                flex-direction: column;&#10;                gap: 20px;&#10;                text-align: center;&#10;            }&#10;&#10;            .reviews-grid {&#10;                grid-template-columns: 1fr;&#10;            }&#10;&#10;            .review-stats {&#10;                grid-template-columns: 1fr;&#10;            }&#10;&#10;            .form-actions {&#10;                flex-direction: column;&#10;            }&#10;&#10;            .review-header {&#10;                flex-direction: column;&#10;                gap: 10px;&#10;            }&#10;&#10;            .review-actions {&#10;                justify-content: center;&#10;            }&#10;        }&#10;    &lt;/style&gt;&#10;    &lt;script src=&quot;profile-avatar.js&quot;&gt;&lt;/script&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;!-- Header --&gt;&#10;&lt;header&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;div class=&quot;header-top&quot;&gt;&#10;            &lt;a href=&quot;index.html&quot; class=&quot;logo&quot;&gt;&#10;                &lt;i class=&quot;fas fa-home&quot;&gt;&lt;/i&gt;&#10;                PropertyHub&#10;            &lt;/a&gt;&#10;&#10;            &lt;ul class=&quot;nav-menu&quot;&gt;&#10;                &lt;li&gt;&lt;a href=&quot;index.html&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;&#10;                &lt;li&gt;&lt;a href=&quot;buy.html&quot; onclick=&quot;checkAuth('buy')&quot;&gt;Buy&lt;/a&gt;&lt;/li&gt;&#10;                &lt;li&gt;&lt;a href=&quot;Rent.html&quot; onclick=&quot;checkAuth('rent')&quot;&gt;Rent&lt;/a&gt;&lt;/li&gt;&#10;                &lt;li&gt;&lt;a href=&quot;apartment.html&quot; onclick=&quot;checkAuth('sell')&quot;&gt;Sell&lt;/a&gt;&lt;/li&gt;&#10;                &lt;li&gt;&lt;a href=&quot;reviews.html&quot; class=&quot;active&quot;&gt;Reviews&lt;/a&gt;&lt;/li&gt;&#10;                &lt;li&gt;&lt;a href=&quot;dashboard.html&quot; onclick=&quot;checkAuth('dashboard')&quot;&gt;Dashboard&lt;/a&gt;&lt;/li&gt;&#10;            &lt;/ul&gt;&#10;&#10;            &lt;!-- User Account Dropdown --&gt;&#10;            &lt;div class=&quot;user-dropdown&quot; id=&quot;userDropdown&quot;&gt;&#10;                &lt;div class=&quot;user-trigger&quot; onclick=&quot;toggleUserMenu()&quot;&gt;&#10;                    &lt;div class=&quot;user-avatar&quot; id=&quot;user-avatar&quot;&gt;U&lt;/div&gt;&#10;                    &lt;span class=&quot;user-name&quot; id=&quot;user-name&quot;&gt;User&lt;/span&gt;&#10;                    &lt;i class=&quot;fas fa-chevron-down dropdown-arrow&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;user-dropdown-menu&quot; id=&quot;user-menu&quot;&gt;&#10;                    &lt;div class=&quot;dropdown-header&quot;&gt;&#10;                        &lt;div class=&quot;user-avatar-large&quot; id=&quot;user-avatar-large&quot;&gt;U&lt;/div&gt;&#10;                        &lt;div class=&quot;user-details&quot;&gt;&#10;                            &lt;span class=&quot;user-name-large&quot; id=&quot;user-name-large&quot;&gt;User&lt;/span&gt;&#10;                            &lt;span class=&quot;user-email&quot; id=&quot;user-email&quot;&gt;user@email.com&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;dropdown-divider&quot;&gt;&lt;/div&gt;&#10;                    &lt;ul class=&quot;dropdown-menu-items&quot;&gt;&#10;                        &lt;li&gt;&lt;a href=&quot;profile.html&quot;&gt;&lt;i class=&quot;fas fa-user&quot;&gt;&lt;/i&gt; Profile&lt;/a&gt;&lt;/li&gt;&#10;                        &lt;li&gt;&lt;a href=&quot;reviews.html&quot;&gt;&lt;i class=&quot;fas fa-star&quot;&gt;&lt;/i&gt; Reviews&lt;/a&gt;&lt;/li&gt;&#10;                        &lt;li&gt;&lt;a href=&quot;dashboard.html&quot; onclick=&quot;checkAuth('dashboard')&quot;&gt;&lt;i class=&quot;fas fa-tachometer-alt&quot;&gt;&lt;/i&gt; Dashboard&lt;/a&gt;&lt;/li&gt;&#10;                        &lt;li&gt;&lt;a href=&quot;apartment.html&quot; onclick=&quot;checkAuth('sell')&quot;&gt;&lt;i class=&quot;fas fa-home&quot;&gt;&lt;/i&gt; Sell&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;/ul&gt;&#10;                    &lt;div class=&quot;dropdown-footer&quot;&gt;&#10;                        &lt;button class=&quot;btn-logout-dropdown&quot; onclick=&quot;logout()&quot;&gt;&#10;                            &lt;i class=&quot;fas fa-sign-out-alt&quot;&gt;&lt;/i&gt; Logout&#10;                        &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;button id=&quot;theme-toggle&quot; class=&quot;theme-toggle&quot;&gt;&lt;/button&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/header&gt;&#10;&#10;&lt;!-- Reviews Page Content --&gt;&#10;&lt;section class=&quot;reviews-page&quot;&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;!-- Page Header --&gt;&#10;        &lt;div class=&quot;reviews-header&quot;&gt;&#10;            &lt;h1&gt;Customer Reviews&lt;/h1&gt;&#10;            &lt;button class=&quot;btn-primary&quot; onclick=&quot;showReviewForm()&quot; id=&quot;write-review-btn&quot;&gt;&#10;                &lt;i class=&quot;fas fa-plus&quot;&gt;&lt;/i&gt; Write a Review&#10;            &lt;/button&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Review Statistics --&gt;&#10;        &lt;div class=&quot;review-stats&quot; id=&quot;review-stats&quot;&gt;&#10;            &lt;div class=&quot;stat-card&quot;&gt;&#10;                &lt;h3 id=&quot;average-rating&quot;&gt;0.0&lt;/h3&gt;&#10;                &lt;p&gt;Average Rating&lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;stat-card&quot;&gt;&#10;                &lt;h3 id=&quot;total-reviews&quot;&gt;0&lt;/h3&gt;&#10;                &lt;p&gt;Total Reviews&lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;stat-card&quot;&gt;&#10;                &lt;h3 id=&quot;rating-distribution-title&quot;&gt;Rating Distribution&lt;/h3&gt;&#10;                &lt;div class=&quot;rating-distribution&quot; id=&quot;rating-distribution&quot;&gt;&#10;                    &lt;!-- Rating bars will be populated by JavaScript --&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Review Form --&gt;&#10;        &lt;div class=&quot;review-form-container&quot; id=&quot;review-form&quot;&gt;&#10;            &lt;div class=&quot;review-form&quot;&gt;&#10;                &lt;h3&gt;Share Your Experience&lt;/h3&gt;&#10;                &lt;form id=&quot;new-review-form&quot; onsubmit=&quot;submitReview(event)&quot;&gt;&#10;                    &lt;div class=&quot;form-group&quot;&gt;&#10;                        &lt;label&gt;Your Rating&lt;/label&gt;&#10;                        &lt;div class=&quot;star-rating&quot;&gt;&#10;                            &lt;span class=&quot;star&quot; onclick=&quot;setRating(1)&quot;&gt;★&lt;/span&gt;&#10;                            &lt;span class=&quot;star&quot; onclick=&quot;setRating(2)&quot;&gt;★&lt;/span&gt;&#10;                            &lt;span class=&quot;star&quot; onclick=&quot;setRating(3)&quot;&gt;★&lt;/span&gt;&#10;                            &lt;span class=&quot;star&quot; onclick=&quot;setRating(4)&quot;&gt;★&lt;/span&gt;&#10;                            &lt;span class=&quot;star&quot; onclick=&quot;setRating(5)&quot;&gt;★&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;input type=&quot;hidden&quot; id=&quot;rating-value&quot; name=&quot;rating&quot; required&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;form-group&quot;&gt;&#10;                        &lt;label for=&quot;review-title&quot;&gt;Review Title&lt;/label&gt;&#10;                        &lt;input type=&quot;text&quot; id=&quot;review-title&quot; name=&quot;title&quot; placeholder=&quot;Summarize your experience&quot; required maxlength=&quot;200&quot;&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;form-group&quot;&gt;&#10;                        &lt;label for=&quot;review-comment&quot;&gt;Your Review&lt;/label&gt;&#10;                        &lt;textarea id=&quot;review-comment&quot; name=&quot;comment&quot; rows=&quot;5&quot; placeholder=&quot;Share details of your experience with PropertyHub...&quot; required&gt;&lt;/textarea&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;form-actions&quot;&gt;&#10;                        &lt;button type=&quot;button&quot; class=&quot;btn-secondary&quot; onclick=&quot;hideReviewForm()&quot;&gt;Cancel&lt;/button&gt;&#10;                        &lt;button type=&quot;submit&quot; class=&quot;btn-primary&quot;&gt;Submit Review&lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/form&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Messages --&gt;&#10;        &lt;div class=&quot;success-message&quot; id=&quot;success-message&quot;&gt;&lt;/div&gt;&#10;        &lt;div class=&quot;error-message&quot; id=&quot;error-message&quot;&gt;&lt;/div&gt;&#10;&#10;        &lt;!-- User Reviews Section --&gt;&#10;        &lt;div class=&quot;reviews-section&quot;&gt;&#10;            &lt;h2 class=&quot;section-title&quot;&gt;My Reviews&lt;/h2&gt;&#10;            &lt;div class=&quot;reviews-grid&quot; id=&quot;user-reviews-list&quot;&gt;&#10;                &lt;!-- User reviews will be loaded here --&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Public Reviews Section removed as requested --&gt;&#10;    &lt;/div&gt;&#10;&lt;/section&gt;&#10;&#10;&lt;!-- Footer --&gt;&#10;&lt;footer&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;div class=&quot;footer-content&quot;&gt;&#10;            &lt;div class=&quot;footer-column&quot;&gt;&#10;                &lt;h3&gt;PropertyHub&lt;/h3&gt;&#10;                &lt;p&gt;Your gateway to premium real estate. Discover, rent, and purchase your dream home with our comprehensive property management system.&lt;/p&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;footer-column&quot;&gt;&#10;                &lt;h3&gt;Quick Links&lt;/h3&gt;&#10;                &lt;ul&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;buy.html&quot;&gt;Buy&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;rent.html&quot;&gt;Rent&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;apartment.html&quot;&gt;Sell&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;reviews.html&quot;&gt;Reviews&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;dashboard.html&quot;&gt;Dashboard&lt;/a&gt;&lt;/li&gt;&#10;                &lt;/ul&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;footer-column&quot;&gt;&#10;                &lt;h3&gt;Contact Us&lt;/h3&gt;&#10;                &lt;ul&gt;&#10;                    &lt;li&gt;&lt;i class=&quot;fas fa-map-marker-alt&quot;&gt;&lt;/i&gt; 123 Real Estate Ave, Tampa, FL&lt;/li&gt;&#10;                    &lt;li&gt;&lt;i class=&quot;fas fa-phone&quot;&gt;&lt;/i&gt; (555) 123-4567&lt;/li&gt;&#10;                    &lt;li&gt;&lt;i class=&quot;fas fa-envelope&quot;&gt;&lt;/i&gt; info@propertyhub.com&lt;/li&gt;&#10;                &lt;/ul&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;copyright&quot;&gt;&#10;            &lt;p&gt;&amp;copy; 2025 PropertyHub. All rights reserved.&lt;/p&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/footer&gt;&#10;&#10;&lt;script&gt;&#10;    // ==================== GLOBAL CONFIGURATION ====================&#10;    const CONFIG = {&#10;        API_BASE_URL: 'http://localhost:8080/api',&#10;        REQUEST_TIMEOUT: 10000&#10;    };&#10;&#10;    // ==================== STATE MANAGEMENT ====================&#10;    let currentUser = null;&#10;    let currentRating = 0;&#10;&#10;    // Authentication management functions&#10;    function isAuthenticated() {&#10;        return sessionStorage.getItem('currentUser') !== null;&#10;    }&#10;&#10;    function getCurrentUser() {&#10;        const userJson = sessionStorage.getItem('currentUser');&#10;        return userJson ? JSON.parse(userJson) : null;&#10;    }&#10;&#10;    // Authentication check for navigation&#10;    function checkAuth(page) {&#10;        const currentUser = JSON.parse(sessionStorage.getItem('currentUser') || 'null');&#10;        if (currentUser) {&#10;            // User is authenticated, redirect to the page&#10;            switch(page) {&#10;                case 'buy':&#10;                    window.location.href = 'buy.html';&#10;                    break;&#10;                case 'rent':&#10;                    window.location.href = 'Rent.html';&#10;                    break;&#10;                case 'sell':&#10;                    window.location.href = 'apartment.html';&#10;                    break;&#10;                case 'dashboard':&#10;                    window.location.href = 'dashboard.html';&#10;                    break;&#10;            }&#10;        } else {&#10;            // User not authenticated, redirect to login page&#10;            window.location.href = 'index.html';&#10;        }&#10;    }&#10;&#10;    function toggleUserMenu() {&#10;        const userMenu = document.getElementById('user-menu');&#10;        const dropdown = document.querySelector('.user-dropdown');&#10;        userMenu.classList.toggle('show');&#10;        dropdown.classList.toggle('active');&#10;    }&#10;&#10;    function updateUserDropdown(user) {&#10;        const authButtons = document.getElementById('auth-buttons');&#10;        if (authButtons) {&#10;            authButtons.style.display = 'none';&#10;        }&#10;        document.getElementById('userDropdown').style.display = 'inline-block';&#10;&#10;        document.getElementById('user-name').textContent = user.name;&#10;        document.getElementById('user-name-large').textContent = user.name;&#10;        document.getElementById('user-email').textContent = user.email;&#10;&#10;        // Update avatars with profile pictures&#10;        updateUserAvatars(user);&#10;&#10;        currentUser = user;&#10;    }&#10;&#10;    function updateUserAvatars(user) {&#10;        const savedPicture = getUserProfilePicture(user.userID);&#10;        const userAvatar = document.getElementById('user-avatar');&#10;        const userAvatarLarge = document.getElementById('user-avatar-large');&#10;&#10;        if (savedPicture) {&#10;            // Replace with image elements&#10;            userAvatar.innerHTML = `&lt;img src=&quot;${savedPicture}&quot; style=&quot;width: 100%; height: 100%; border-radius: 50%; object-fit: cover;&quot; alt=&quot;Profile&quot;&gt;`;&#10;            userAvatarLarge.innerHTML = `&lt;img src=&quot;${savedPicture}&quot; style=&quot;width: 100%; height: 100%; border-radius: 50%; object-fit: cover;&quot; alt=&quot;Profile&quot;&gt;`;&#10;        } else {&#10;            // Show initials&#10;            const initials = getUserInitials(user.name);&#10;            userAvatar.textContent = initials;&#10;            userAvatarLarge.textContent = initials;&#10;        }&#10;    }&#10;&#10;    function resetUserDropdown() {&#10;        const authButtons = document.getElementById('auth-buttons');&#10;        if (authButtons) {&#10;            authButtons.style.display = 'flex';&#10;        }&#10;        document.getElementById('userDropdown').style.display = 'none';&#10;        currentUser = null;&#10;    }&#10;&#10;    // ==================== REVIEWS FUNCTIONALITY ====================&#10;    function showReviewForm() {&#10;        if (!isAuthenticated()) {&#10;            alert('Please login to write a review.');&#10;            // Since we don't have an auth modal on this page, redirect to login&#10;            window.location.href = 'index.html?showLogin=true';&#10;            return;&#10;        }&#10;        document.getElementById('review-form').classList.add('show');&#10;    }&#10;&#10;    function hideReviewForm() {&#10;        document.getElementById('review-form').classList.remove('show');&#10;        resetReviewForm();&#10;    }&#10;&#10;    function resetReviewForm() {&#10;        // Reset form fields&#10;        document.getElementById('new-review-form').reset();&#10;        document.getElementById('rating-value').value = '';&#10;&#10;        // Reset star rating display&#10;        const stars = document.querySelectorAll('.star');&#10;        stars.forEach(star =&gt; star.classList.remove('active'));&#10;        currentRating = 0;&#10;&#10;        // Reset form title and button text&#10;        document.querySelector('.review-form h3').textContent = 'Share Your Experience';&#10;        document.querySelector('.btn-primary').textContent = 'Submit Review';&#10;&#10;        // Reset editing mode&#10;        editingReviewId = null;&#10;    }&#10;&#10;    function setRating(rating) {&#10;        currentRating = rating;&#10;        const stars = document.querySelectorAll('.star');&#10;        stars.forEach((star, index) =&gt; {&#10;            if (index &lt; rating) {&#10;                star.classList.add('active');&#10;            } else {&#10;                star.classList.remove('active');&#10;            }&#10;        });&#10;        document.getElementById('rating-value').value = rating;&#10;    }&#10;&#10;    async function submitReview(event) {&#10;        event.preventDefault();&#10;&#10;        if (!isAuthenticated()) {&#10;            alert('Please login to submit a review.');&#10;            window.location.href = 'index.html?showLogin=true';&#10;            return;&#10;        }&#10;&#10;        const user = getCurrentUser();&#10;        const formData = new FormData(event.target);&#10;&#10;        const reviewData = {&#10;            rating: parseInt(formData.get('rating')),&#10;            title: formData.get('title'),&#10;            comment: formData.get('comment')&#10;        };&#10;&#10;        if (reviewData.rating &lt; 1 || reviewData.rating &gt; 5) {&#10;            showMessage('error', 'Please select a rating between 1 and 5 stars.');&#10;            return;&#10;        }&#10;&#10;        try {&#10;            let response;&#10;            let successMessage;&#10;            let activityType;&#10;&#10;            if (editingReviewId) {&#10;                // Update existing review by deleting old one and creating new one&#10;                // First delete the old review&#10;                const deleteResponse = await fetch(`${CONFIG.API_BASE_URL}/reviews/${editingReviewId}?userId=${user.userID}`, {&#10;                    method: 'DELETE',&#10;                    headers: {&#10;                        'Authorization': `Bearer ${sessionStorage.getItem('authToken')}`&#10;                    }&#10;                });&#10;&#10;                if (!deleteResponse.ok) {&#10;                    throw new Error('Failed to delete old review');&#10;                }&#10;&#10;                // Then create the new review with updated data&#10;                response = await fetch(`${CONFIG.API_BASE_URL}/reviews/user/${user.userID}`, {&#10;                    method: 'POST',&#10;                    headers: {&#10;                        'Content-Type': 'application/json',&#10;                        'Authorization': `Bearer ${sessionStorage.getItem('authToken')}`&#10;                    },&#10;                    body: JSON.stringify(reviewData)&#10;                });&#10;                successMessage = 'Review updated successfully!';&#10;                activityType = 'Updated review';&#10;            } else {&#10;                // Create new review&#10;                response = await fetch(`${CONFIG.API_BASE_URL}/reviews/user/${user.userID}`, {&#10;                    method: 'POST',&#10;                    headers: {&#10;                        'Content-Type': 'application/json',&#10;                        'Authorization': `Bearer ${sessionStorage.getItem('authToken')}`&#10;                    },&#10;                    body: JSON.stringify(reviewData)&#10;                });&#10;                successMessage = 'Review submitted successfully! It will be visible after approval.';&#10;                activityType = 'Submitted new review';&#10;            }&#10;&#10;            const result = await response.json();&#10;&#10;            if (response.ok) {&#10;                showMessage('success', successMessage);&#10;                hideReviewForm();&#10;                loadUserReviews();&#10;                loadReviewStats();&#10;                trackUserActivity('review', activityType, reviewData);&#10;&#10;                // Reset editing mode&#10;                editingReviewId = null;&#10;                resetReviewForm();&#10;            } else {&#10;                showMessage('error', 'Failed to ' + (editingReviewId ? 'update' : 'submit') + ' review: ' + (result.error || 'Unknown error'));&#10;            }&#10;        } catch (error) {&#10;            console.error('Submit review error:', error);&#10;            showMessage('error', 'Failed to ' + (editingReviewId ? 'update' : 'submit') + ' review. Please try again.');&#10;        }&#10;    }&#10;&#10;    async function loadUserReviews() {&#10;        if (!isAuthenticated()) {&#10;            document.getElementById('user-reviews-list').innerHTML = `&#10;                &lt;div class=&quot;no-reviews&quot;&gt;&#10;                    &lt;p&gt;Please login to view your reviews&lt;/p&gt;&#10;                &lt;/div&gt;&#10;            `;&#10;            return;&#10;        }&#10;&#10;        const user = getCurrentUser();&#10;&#10;        try {&#10;            const response = await fetch(`${CONFIG.API_BASE_URL}/reviews/user/${user.userID}`, {&#10;                headers: {&#10;                    'Authorization': `Bearer ${sessionStorage.getItem('authToken')}`&#10;                }&#10;            });&#10;&#10;            if (!response.ok) throw new Error('Failed to load user reviews');&#10;&#10;            const reviews = await response.json();&#10;            displayUserReviews(reviews);&#10;        } catch (error) {&#10;            console.error('Load user reviews error:', error);&#10;            document.getElementById('user-reviews-list').innerHTML = `&#10;                &lt;div class=&quot;no-reviews&quot;&gt;&#10;                    &lt;p&gt;Error loading your reviews. Please try again later.&lt;/p&gt;&#10;                &lt;/div&gt;&#10;            `;&#10;        }&#10;    }&#10;&#10;    async function loadReviewStats() {&#10;        try {&#10;            // First get average rating&#10;            const avgResponse = await fetch(`${CONFIG.API_BASE_URL}/reviews/stats/average`);&#10;            // Then get total reviews count for each rating (1-5)&#10;            const countPromises = [];&#10;            for (let i = 1; i &lt;= 5; i++) {&#10;                countPromises.push(fetch(`${CONFIG.API_BASE_URL}/reviews/stats/count/${i}`));&#10;            }&#10;&#10;            const countResponses = await Promise.all(countPromises);&#10;            const countResults = await Promise.all(countResponses.map(r =&gt; r.json()));&#10;&#10;            const avgResult = await avgResponse.json();&#10;&#10;            // Combine the data&#10;            const stats = {&#10;                averageRating: avgResult.toFixed(1),&#10;                totalReviews: countResults.reduce((sum, curr) =&gt; sum + curr, 0),&#10;                rating1Count: countResults[0],&#10;                rating2Count: countResults[1],&#10;                rating3Count: countResults[2],&#10;                rating4Count: countResults[3],&#10;                rating5Count: countResults[4]&#10;            };&#10;&#10;            displayReviewStats(stats);&#10;        } catch (error) {&#10;            console.error('Load review stats error:', error);&#10;            // Display default stats&#10;            displayReviewStats({&#10;                averageRating: '0.0',&#10;                totalReviews: 0,&#10;                rating1Count: 0,&#10;                rating2Count: 0,&#10;                rating3Count: 0,&#10;                rating4Count: 0,&#10;                rating5Count: 0&#10;            });&#10;        }&#10;    }&#10;&#10;    function displayUserReviews(reviews) {&#10;        const container = document.getElementById('user-reviews-list');&#10;&#10;        if (reviews.length === 0) {&#10;            container.innerHTML = `&#10;                &lt;div class=&quot;no-reviews&quot;&gt;&#10;                    &lt;p&gt;You haven't written any reviews yet.&lt;/p&gt;&#10;                    &lt;button class=&quot;btn-primary&quot; onclick=&quot;showReviewForm()&quot;&gt;Write Your First Review&lt;/button&gt;&#10;                &lt;/div&gt;&#10;            `;&#10;            return;&#10;        }&#10;&#10;        container.innerHTML = reviews.map(review =&gt; `&#10;            &lt;div class=&quot;review-card&quot; data-review-id=&quot;${review.reviewID}&quot;&gt;&#10;                &lt;div class=&quot;review-header&quot;&gt;&#10;                    &lt;div class=&quot;review-user&quot;&gt;&#10;                        &lt;div class=&quot;user-avatar-small&quot;&gt;&#10;                            ${review.user.name ? review.user.name.charAt(0).toUpperCase() : 'U'}&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;user-info&quot;&gt;&#10;                            &lt;h4&gt;${review.user.name || 'User'}&lt;/h4&gt;&#10;                            &lt;div class=&quot;review-date&quot;&gt;${formatDate(review.createdAt)}&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;review-rating&quot;&gt;&#10;                        ${Array.from({length: 5}, (_, i) =&gt;&#10;                            `&lt;span class=&quot;star ${i &lt; review.rating ? 'filled' : ''}&quot;&gt;${i &lt; review.rating ? '★' : '☆'}&lt;/span&gt;`&#10;                        ).join('')}&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;review-title&quot;&gt;${review.title}&lt;/div&gt;&#10;                &lt;div class=&quot;review-text&quot;&gt;${review.comment}&lt;/div&gt;&#10;                &lt;div class=&quot;review-status ${review.isApproved ? 'status-approved' : 'status-pending'}&quot;&gt;&#10;                    ${review.isApproved ? '✓ Approved' : '⏳ Pending Approval'}&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;review-actions&quot;&gt;&#10;                    &lt;button class=&quot;btn-edit&quot; onclick=&quot;editReview(${review.reviewID})&quot;&gt;Edit&lt;/button&gt;&#10;                    &lt;button class=&quot;btn-delete&quot; onclick=&quot;deleteReview(${review.reviewID})&quot;&gt;Delete&lt;/button&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        `).join('');&#10;    }&#10;&#10;    function displayReviewStats(stats) {&#10;        document.getElementById('average-rating').textContent = stats.averageRating || '0.0';&#10;        document.getElementById('total-reviews').textContent = stats.totalReviews || '0';&#10;&#10;        // Display rating distribution&#10;        const distributionContainer = document.getElementById('rating-distribution');&#10;        let totalReviews = stats.totalReviews || 1; // Avoid division by zero&#10;&#10;        distributionContainer.innerHTML = '';&#10;        for (let i = 5; i &gt;= 1; i--) {&#10;            const count = stats[`rating${i}Count`] || 0;&#10;            const percentage = totalReviews &gt; 0 ? (count / totalReviews) * 100 : 0;&#10;&#10;            distributionContainer.innerHTML += `&#10;                &lt;div class=&quot;rating-bar&quot;&gt;&#10;                    &lt;div class=&quot;rating-stars&quot;&gt;${'★'.repeat(i)}&lt;/div&gt;&#10;                    &lt;div class=&quot;rating-progress&quot;&gt;&#10;                        &lt;div class=&quot;rating-fill&quot; style=&quot;width: ${percentage}%&quot;&gt;&lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;rating-count&quot;&gt;${count}&lt;/div&gt;&#10;                &lt;/div&gt;&#10;            `;&#10;        }&#10;    }&#10;&#10;    let editingReviewId = null;&#10;&#10;    async function editReview(reviewId) {&#10;        try {&#10;            // Find the review in the current reviews list&#10;            const reviewElement = document.querySelector(`[data-review-id=&quot;${reviewId}&quot;]`);&#10;            if (!reviewElement) {&#10;                showMessage('error', 'Review not found');&#10;                return;&#10;            }&#10;&#10;            // Extract current review data from the DOM&#10;            const titleElement = reviewElement.querySelector('.review-title');&#10;            const commentElement = reviewElement.querySelector('.review-text');&#10;            const ratingElement = reviewElement.querySelector('.review-rating');&#10;&#10;            if (!titleElement || !commentElement || !ratingElement) {&#10;                showMessage('error', 'Unable to load review data');&#10;                return;&#10;            }&#10;&#10;            const currentTitle = titleElement.textContent.trim();&#10;            const currentComment = commentElement.textContent.trim();&#10;            const currentRating = ratingElement.querySelectorAll('.star.filled').length;&#10;&#10;            // Set editing mode&#10;            editingReviewId = reviewId;&#10;&#10;            // Populate the form with current values&#10;            document.getElementById('review-title').value = currentTitle;&#10;            document.getElementById('review-comment').value = currentComment;&#10;            document.getElementById('rating-value').value = currentRating;&#10;&#10;            // Update star rating display&#10;            setRating(currentRating);&#10;&#10;            // Update form title and button text&#10;            document.querySelector('.review-form h3').textContent = 'Edit Your Review';&#10;            document.querySelector('.btn-primary').textContent = 'Update Review';&#10;&#10;            // Show the form&#10;            showReviewForm();&#10;&#10;        } catch (error) {&#10;            console.error('Error loading review for editing:', error);&#10;            showMessage('error', 'Failed to load review for editing');&#10;        }&#10;    }&#10;&#10;    async function deleteReview(reviewId) {&#10;        if (!confirm('Are you sure you want to delete this review?')) {&#10;            return;&#10;        }&#10;&#10;        try {&#10;            const response = await fetch(`${CONFIG.API_BASE_URL}/reviews/${reviewId}?userId=${getCurrentUser().userID}`, {&#10;                method: 'DELETE',&#10;                headers: {&#10;                    'Authorization': `Bearer ${sessionStorage.getItem('authToken')}`&#10;                }&#10;            });&#10;&#10;            if (response.ok) {&#10;                showMessage('success', 'Review deleted successfully!');&#10;                loadUserReviews();&#10;                loadReviewStats();&#10;                trackUserActivity('review', 'Deleted review', { reviewId });&#10;            } else {&#10;                throw new Error('Failed to delete review');&#10;            }&#10;        } catch (error) {&#10;            console.error('Delete review error:', error);&#10;            showMessage('error', 'Failed to delete review. Please try again.');&#10;        }&#10;    }&#10;&#10;    // ==================== UTILITY FUNCTIONS ====================&#10;    function formatDate(dateString) {&#10;        return new Date(dateString).toLocaleDateString('en-US', {&#10;            year: 'numeric',&#10;            month: 'long',&#10;            day: 'numeric'&#10;        });&#10;    }&#10;&#10;    function showMessage(type, message) {&#10;        const successEl = document.getElementById('success-message');&#10;        const errorEl = document.getElementById('error-message');&#10;&#10;        if (type === 'success') {&#10;            successEl.textContent = message;&#10;            successEl.style.display = 'block';&#10;            errorEl.style.display = 'none';&#10;&#10;            setTimeout(() =&gt; {&#10;                successEl.style.display = 'none';&#10;            }, 5000);&#10;        } else {&#10;            errorEl.textContent = message;&#10;            errorEl.style.display = 'block';&#10;            successEl.style.display = 'none';&#10;        }&#10;    }&#10;&#10;    async function trackUserActivity(activityType, description, relatedData = null) {&#10;        const user = getCurrentUser();&#10;        if (!user) return;&#10;&#10;        const activity = {&#10;            userID: user.userID,&#10;            activityType: activityType,&#10;            description: description,&#10;            relatedData: relatedData ? JSON.stringify(relatedData) : null&#10;        };&#10;&#10;        try {&#10;            await fetch(`${CONFIG.API_BASE_URL}/user/activity`, {&#10;                method: 'POST',&#10;                headers: {&#10;                    'Content-Type': 'application/json',&#10;                    'Authorization': `Bearer ${sessionStorage.getItem('authToken')}`&#10;                },&#10;                body: JSON.stringify(activity)&#10;            });&#10;        } catch (error) {&#10;            console.error('Failed to track activity:', error);&#10;        }&#10;    }&#10;&#10;    function logout() {&#10;        if (confirm('Are you sure you want to logout?')) {&#10;            if (currentUser) {&#10;                trackUserActivity('authentication', 'User logged out');&#10;            }&#10;&#10;            sessionStorage.removeItem('currentUser');&#10;            sessionStorage.removeItem('authToken');&#10;            resetUserDropdown();&#10;&#10;            // Reload the page to reset state&#10;            location.reload();&#10;        }&#10;    }&#10;&#10;    // ==================== THEME MANAGEMENT ====================&#10;    function setTheme(theme) {&#10;        document.documentElement.setAttribute('data-theme', theme);&#10;        localStorage.setItem('theme', theme);&#10;        const toggleButton = document.getElementById('theme-toggle');&#10;        if (toggleButton) {&#10;            toggleButton.innerHTML = theme === 'dark' ? '&lt;i class=&quot;fas fa-sun&quot;&gt;&lt;/i&gt;' : '&lt;i class=&quot;fas fa-moon&quot;&gt;&lt;/i&gt;';&#10;        }&#10;        document.body.classList.add('theme-transition');&#10;        setTimeout(() =&gt; document.body.classList.remove('theme-transition'), 300);&#10;    }&#10;&#10;    function toggleTheme() {&#10;        const currentTheme = document.documentElement.getAttribute('data-theme') || 'light';&#10;        const newTheme = currentTheme === 'light' ? 'dark' : 'light';&#10;        setTheme(newTheme);&#10;        trackUserActivity('theme', `Switched to ${newTheme} mode`);&#10;    }&#10;&#10;    function initializeTheme() {&#10;        const savedTheme = localStorage.getItem('theme');&#10;        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;&#10;        const theme = savedTheme || (prefersDark ? 'dark' : 'light');&#10;        setTheme(theme);&#10;    }&#10;&#10;    // ==================== INITIALIZATION ====================&#10;    function initializePage() {&#10;        initializeTheme();&#10;        // Check if user is already logged in&#10;        const savedUser = sessionStorage.getItem('currentUser');&#10;        if (savedUser) {&#10;            const user = JSON.parse(savedUser);&#10;            updateUserDropdown(user);&#10;        }&#10;&#10;        // Load reviews data&#10;        loadUserReviews();&#10;        loadReviewStats();&#10;&#10;        // Close dropdown when clicking outside&#10;        document.addEventListener('click', function(e) {&#10;            const dropdown = document.getElementById('userDropdown');&#10;            if (dropdown &amp;&amp; !dropdown.contains(e.target)) {&#10;                document.getElementById('user-menu').classList.remove('show');&#10;                dropdown.classList.remove('active');&#10;            }&#10;        });&#10;    }&#10;&#10;    // Start the application&#10;    document.addEventListener('DOMContentLoaded', initializePage);&#10;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;&#10;&#10;&#10;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Reviews - PropertyHub&lt;/title&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css&quot;&gt;&#10;    &lt;style&gt;&#10;        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&amp;display=swap');&#10;&#10;        :root {&#10;            /* Light Mode Variables */&#10;            --bg-primary-light: #F9FAFB;&#10;            --bg-secondary-light: #FFFFFF;&#10;            --text-primary-light: #111827;&#10;            --text-secondary-light: #6B7280;&#10;            --primary-light: #4F46E5;&#10;            --secondary-light: #06B6D4;&#10;            --accent-light: #F59E0B;&#10;            --shadow-light: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);&#10;            --border-light: rgba(79, 70, 229, 0.1);&#10;            --success-light: #22C55E;&#10;            --error-light: #EF4444;&#10;&#10;            /* Dark Mode Variables */&#10;            --bg-primary-dark: #1F2937;&#10;            --bg-secondary-dark: #374151;&#10;            --text-primary-dark: #F3F4F6;&#10;            --text-secondary-dark: #D1D5DB;&#10;            --primary-dark: #818CF8;&#10;            --secondary-dark: #22D3EE;&#10;            --accent-dark: #FBBF24;&#10;            --shadow-dark: 0 4px 6px -1px rgba(0, 0, 0, 0.3), 0 2px 4px -1px rgba(0, 0, 0, 0.2);&#10;            --border-dark: rgba(129, 140, 248, 0.2);&#10;            --success-dark: #4ADE80;&#10;            --error-dark: #F87171;&#10;&#10;            /* Default to Light Mode */&#10;            --bg-primary: var(--bg-primary-light);&#10;            --bg-secondary: var(--bg-secondary-light);&#10;            --text-primary: var(--text-primary-light);&#10;            --text-secondary: var(--text-secondary-light);&#10;            --primary: var(--primary-light);&#10;            --secondary: var(--secondary-light);&#10;            --accent: var(--accent-light);&#10;            --shadow: var(--shadow-light);&#10;            --border: var(--border-light);&#10;            --success: var(--success-light);&#10;            --error: var(--error-light);&#10;            --transition: all 0.3s ease;&#10;        }&#10;&#10;        [data-theme=&quot;dark&quot;] {&#10;            --bg-primary: var(--bg-primary-dark);&#10;            --bg-secondary: var(--bg-secondary-dark);&#10;            --text-primary: var(--text-primary-dark);&#10;            --text-secondary: var(--text-secondary-dark);&#10;            --primary: var(--primary-dark);&#10;            --secondary: var(--secondary-dark);&#10;            --accent: var(--accent-dark);&#10;            --shadow: var(--shadow-dark);&#10;            --border: var(--border-dark);&#10;            --success: var(--success-dark);&#10;            --error: var(--error-dark);&#10;        }&#10;&#10;        * {&#10;            margin: 0;&#10;            padding: 0;&#10;            box-sizing: border-box;&#10;            font-family: 'Poppins', sans-serif;&#10;        }&#10;&#10;        body {&#10;            background-color: var(--bg-primary);&#10;            color: var(--text-primary);&#10;            line-height: 1.6;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .container {&#10;            width: 100%;&#10;            max-width: 1280px;&#10;            margin: 0 auto;&#10;            padding: 0 20px;&#10;        }&#10;&#10;        /* Header Styles */&#10;        header {&#10;            background-color: var(--bg-secondary);&#10;            box-shadow: var(--shadow);&#10;            position: sticky;&#10;            top: 0;&#10;            z-index: 100;&#10;        }&#10;&#10;        .header-top {&#10;            display: flex;&#10;            justify-content: space-between;&#10;            align-items: center;&#10;            padding: 20px 0;&#10;        }&#10;&#10;        .logo {&#10;            font-size: 28px;&#10;            font-weight: 700;&#10;            color: var(--primary);&#10;            text-decoration: none;&#10;            display: flex;&#10;            align-items: center;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .logo:hover {&#10;            transform: scale(1.05);&#10;        }&#10;&#10;        .logo i {&#10;            margin-right: 12px;&#10;        }&#10;&#10;        .nav-menu {&#10;            display: flex;&#10;            list-style: none;&#10;        }&#10;&#10;        .nav-menu li {&#10;            margin: 0 20px;&#10;        }&#10;&#10;        .nav-menu a {&#10;            text-decoration: none;&#10;            color: var(--text-primary);&#10;            font-weight: 500;&#10;            transition: var(--transition);&#10;            padding: 10px 15px;&#10;            border-radius: 8px;&#10;        }&#10;&#10;        .nav-menu a:hover, .nav-menu a.active {&#10;            color: var(--primary);&#10;            background-color: rgba(var(--primary-rgb, 79, 70, 229), 0.05);&#10;        }&#10;&#10;        .auth-buttons {&#10;            display: flex;&#10;            align-items: center;&#10;        }&#10;&#10;        .btn {&#10;            padding: 12px 24px;&#10;            border-radius: 8px;&#10;            font-weight: 500;&#10;            cursor: pointer;&#10;            transition: var(--transition);&#10;            border: none;&#10;            font-size: 16px;&#10;        }&#10;&#10;        .btn-login {&#10;            background: transparent;&#10;            color: var(--primary);&#10;            border: 1px solid var(--primary);&#10;            margin-right: 12px;&#10;        }&#10;&#10;        .btn-signup {&#10;            background-color: var(--primary);&#10;            color: var(--bg-secondary);&#10;            border: 1px solid var(--primary);&#10;        }&#10;&#10;        .btn-login:hover {&#10;            background-color: rgba(var(--primary-rgb, 79, 70, 229), 0.05);&#10;            transform: translateY(-2px);&#10;        }&#10;&#10;        .btn-signup:hover {&#10;            background-color: var(--primary-dark, #4338CA);&#10;            transform: translateY(-2px);&#10;        }&#10;&#10;        .theme-toggle {&#10;            background: none;&#10;            border: none;&#10;            color: var(--text-primary);&#10;            font-size: 20px;&#10;            cursor: pointer;&#10;            padding: 10px;&#10;            border-radius: 50%;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .theme-toggle:hover {&#10;            background-color: rgba(var(--primary-rgb, 79, 70, 229), 0.05);&#10;            transform: scale(1.1);&#10;        }&#10;&#10;        /* User Dropdown Styles */&#10;        .user-dropdown {&#10;            position: relative;&#10;            display: none;&#10;        }&#10;&#10;        .user-trigger {&#10;            display: flex;&#10;            align-items: center;&#10;            gap: 12px;&#10;            cursor: pointer;&#10;            padding: 10px 18px;&#10;            border-radius: 30px;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .user-trigger:hover {&#10;            background-color: rgba(var(--primary-rgb, 79, 70, 229), 0.05);&#10;            transform: translateY(-2px);&#10;        }&#10;&#10;        .user-avatar {&#10;            width: 40px;&#10;            height: 40px;&#10;            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);&#10;            border-radius: 50%;&#10;            display: flex;&#10;            align-items: center;&#10;            justify-content: center;&#10;            color: var(--bg-secondary);&#10;            font-weight: 600;&#10;            font-size: 16px;&#10;        }&#10;&#10;        .user-name {&#10;            color: var(--primary);&#10;            font-weight: 500;&#10;            font-size: 16px;&#10;        }&#10;&#10;        .dropdown-arrow {&#10;            color: var(--primary);&#10;            font-size: 14px;&#10;            transition: transform 0.3s;&#10;        }&#10;&#10;        .user-dropdown.active .dropdown-arrow {&#10;            transform: rotate(180deg);&#10;        }&#10;&#10;        .user-dropdown-menu {&#10;            position: absolute;&#10;            top: 100%;&#10;            right: 0;&#10;            background: var(--bg-secondary);&#10;            border-radius: 16px;&#10;            box-shadow: var(--shadow);&#10;            border: 1px solid var(--border);&#10;            min-width: 280px;&#10;            z-index: 1000;&#10;            opacity: 0;&#10;            visibility: hidden;&#10;            transform: translateY(-10px);&#10;            transition: var(--transition);&#10;            margin-top: 8px;&#10;        }&#10;&#10;        .user-dropdown-menu.show {&#10;            opacity: 1;&#10;            visibility: visible;&#10;            transform: translateY(0);&#10;        }&#10;&#10;        .dropdown-header {&#10;            padding: 24px;&#10;            display: flex;&#10;            align-items: center;&#10;            gap: 14px;&#10;        }&#10;&#10;        .user-avatar-large {&#10;            width: 55px;&#10;            height: 55px;&#10;            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);&#10;            border-radius: 50%;&#10;            display: flex;&#10;            align-items: center;&#10;            justify-content: center;&#10;            color: var(--bg-secondary);&#10;            font-weight: 600;&#10;            font-size: 20px;&#10;        }&#10;&#10;        .user-details {&#10;            display: flex;&#10;            flex-direction: column;&#10;        }&#10;&#10;        .user-name-large {&#10;            font-weight: 600;&#10;            color: var(--text-primary);&#10;            font-size: 18px;&#10;        }&#10;&#10;        .user-email {&#10;            color: var(--text-secondary);&#10;            font-size: 14px;&#10;            margin-top: 4px;&#10;        }&#10;&#10;        .dropdown-divider {&#10;            height: 1px;&#10;            background: var(--border);&#10;            margin: 0 12px;&#10;        }&#10;&#10;        .dropdown-menu-items {&#10;            padding: 12px 0;&#10;            list-style: none;&#10;            margin: 0;&#10;        }&#10;&#10;        .dropdown-menu-items a {&#10;            display: flex;&#10;            align-items: center;&#10;            gap: 14px;&#10;            padding: 14px 24px;&#10;            color: var(--text-primary);&#10;            text-decoration: none;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .dropdown-menu-items a:hover {&#10;            background-color: rgba(var(--primary-rgb, 79, 70, 229), 0.05);&#10;            color: var(--primary);&#10;        }&#10;&#10;        .dropdown-menu-items i {&#10;            width: 20px;&#10;            text-align: center;&#10;            color: var(--text-secondary);&#10;        }&#10;&#10;        .dropdown-menu-items a:hover i {&#10;            color: var(--primary);&#10;        }&#10;&#10;        .dropdown-footer {&#10;            padding: 12px 24px 24px;&#10;        }&#10;&#10;        .btn-logout-dropdown {&#10;            width: 100%;&#10;            padding: 12px;&#10;            background: rgba(var(--primary-rgb, 79, 70, 229), 0.05);&#10;            color: var(--error);&#10;            border: 1px solid var(--border);&#10;            border-radius: 10px;&#10;            cursor: pointer;&#10;            font-weight: 500;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .btn-logout-dropdown:hover {&#10;            background: rgba(var(--error-rgb, 239, 68, 68), 0.05);&#10;            border-color: var(--error);&#10;        }&#10;&#10;        /* Reviews Page Styles */&#10;        .reviews-page {&#10;            padding: 80px 0;&#10;            min-height: 80vh;&#10;        }&#10;&#10;        .reviews-header {&#10;            display: flex;&#10;            justify-content: space-between;&#10;            align-items: center;&#10;            margin-bottom: 40px;&#10;        }&#10;&#10;        .reviews-header h1 {&#10;            font-size: 3em;&#10;            color: var(--text-primary);&#10;            font-weight: 700;&#10;        }&#10;&#10;        .btn-primary {&#10;            padding: 12px 24px;&#10;            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);&#10;            color: var(--bg-secondary);&#10;            border: none;&#10;            border-radius: 8px;&#10;            cursor: pointer;&#10;            font-weight: 600;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .btn-primary:hover {&#10;            transform: translateY(-2px);&#10;            box-shadow: 0 4px 6px rgba(var(--primary-rgb, 79, 70, 229), 0.2);&#10;        }&#10;&#10;        .review-stats {&#10;            display: grid;&#10;            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));&#10;            gap: 20px;&#10;            margin-bottom: 40px;&#10;        }&#10;&#10;        .stat-card {&#10;            background: var(--bg-secondary);&#10;            padding: 25px;&#10;            border-radius: 12px;&#10;            box-shadow: var(--shadow);&#10;            text-align: center;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .stat-card:hover {&#10;            transform: translateY(-5px);&#10;        }&#10;&#10;        .stat-card h3 {&#10;            font-size: 2.5em;&#10;            color: var(--primary);&#10;            margin-bottom: 8px;&#10;        }&#10;&#10;        .stat-card p {&#10;            color: var(--text-secondary);&#10;            font-size: 1.1em;&#10;        }&#10;&#10;        .rating-distribution {&#10;            display: flex;&#10;            flex-direction: column;&#10;            gap: 10px;&#10;            margin-top: 15px;&#10;        }&#10;&#10;        .rating-bar {&#10;            display: flex;&#10;            align-items: center;&#10;            gap: 10px;&#10;        }&#10;&#10;        .rating-stars {&#10;            color: var(--accent);&#10;            font-size: 1.1em;&#10;            min-width: 80px;&#10;        }&#10;&#10;        .rating-progress {&#10;            flex: 1;&#10;            height: 8px;&#10;            background: var(--border);&#10;            border-radius: 4px;&#10;            overflow: hidden;&#10;        }&#10;&#10;        .rating-fill {&#10;            height: 100%;&#10;            background: var(--accent);&#10;            transition: width 0.5s ease;&#10;        }&#10;&#10;        .rating-count {&#10;            color: var(--text-secondary);&#10;            min-width: 40px;&#10;            text-align: right;&#10;            font-size: 0.9em;&#10;        }&#10;&#10;        .review-form-container {&#10;            background: var(--bg-secondary);&#10;            border-radius: 15px;&#10;            padding: 30px;&#10;            margin-bottom: 40px;&#10;            box-shadow: var(--shadow);&#10;            display: none;&#10;        }&#10;&#10;        .review-form-container.show {&#10;            display: block;&#10;        }&#10;&#10;        .review-form h3 {&#10;            color: var(--text-primary);&#10;            margin-bottom: 20px;&#10;            font-size: 1.5em;&#10;        }&#10;&#10;        .form-group {&#10;            margin-bottom: 20px;&#10;        }&#10;&#10;        .form-group label {&#10;            display: block;&#10;            margin-bottom: 8px;&#10;            color: var(--text-primary);&#10;            font-weight: 500;&#10;        }&#10;&#10;        .star-rating {&#10;            display: flex;&#10;            gap: 8px;&#10;            margin-bottom: 15px;&#10;        }&#10;&#10;        .star {&#10;            font-size: 2.5em;&#10;            color: var(--border);&#10;            cursor: pointer;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .star:hover,&#10;        .star.active {&#10;            color: var(--accent);&#10;            transform: scale(1.1);&#10;        }&#10;&#10;        .form-group input,&#10;        .form-group textarea {&#10;            width: 100%;&#10;            padding: 12px 15px;&#10;            border: 2px solid var(--border);&#10;            border-radius: 8px;&#10;            font-size: 1em;&#10;            transition: var(--transition);&#10;            resize: vertical;&#10;            background: var(--bg-secondary);&#10;            color: var(--text-primary);&#10;        }&#10;&#10;        .form-group input:focus,&#10;        .form-group textarea:focus {&#10;            outline: none;&#10;            border-color: var(--primary);&#10;        }&#10;&#10;        /* Image Upload Styles */&#10;        .image-upload-container {&#10;            border: 2px dashed var(--border);&#10;            border-radius: 12px;&#10;            padding: 30px;&#10;            text-align: center;&#10;            background: var(--bg-primary);&#10;            transition: var(--transition);&#10;            cursor: pointer;&#10;            position: relative;&#10;        }&#10;&#10;        .image-upload-container:hover {&#10;            border-color: var(--primary);&#10;            background: rgba(var(--primary-rgb, 79, 70, 229), 0.05);&#10;        }&#10;&#10;        .image-upload-container.drag-over {&#10;            border-color: var(--primary);&#10;            background: rgba(var(--primary-rgb, 79, 70, 229), 0.1);&#10;        }&#10;&#10;        .upload-icon {&#10;            font-size: 3em;&#10;            color: var(--text-secondary);&#10;            margin-bottom: 15px;&#10;        }&#10;&#10;        .upload-text {&#10;            color: var(--text-secondary);&#10;            margin-bottom: 10px;&#10;        }&#10;&#10;        .upload-hint {&#10;            font-size: 0.9em;&#10;            color: var(--text-secondary);&#10;            opacity: 0.7;&#10;        }&#10;&#10;        .image-preview-container {&#10;            display: grid;&#10;            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));&#10;            gap: 15px;&#10;            margin-top: 20px;&#10;        }&#10;&#10;        .image-preview {&#10;            position: relative;&#10;            width: 120px;&#10;            height: 120px;&#10;            border-radius: 12px;&#10;            overflow: hidden;&#10;            border: 2px solid var(--border);&#10;            background: var(--bg-secondary);&#10;        }&#10;&#10;        .image-preview img {&#10;            width: 100%;&#10;            height: 100%;&#10;            object-fit: cover;&#10;        }&#10;&#10;        .image-remove {&#10;            position: absolute;&#10;            top: 5px;&#10;            right: 5px;&#10;            background: var(--error);&#10;            color: white;&#10;            border: none;&#10;            border-radius: 50%;&#10;            width: 25px;&#10;            height: 25px;&#10;            cursor: pointer;&#10;            display: flex;&#10;            align-items: center;&#10;            justify-content: center;&#10;            font-size: 0.8em;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .image-remove:hover {&#10;            background: #DC2626;&#10;            transform: scale(1.1);&#10;        }&#10;&#10;        .hidden-file-input {&#10;            display: none;&#10;        }&#10;&#10;        .form-actions {&#10;            display: flex;&#10;            gap: 15px;&#10;            justify-content: flex-end;&#10;            margin-top: 25px;&#10;        }&#10;&#10;        .btn-secondary {&#10;            background: var(--text-secondary);&#10;            color: var(--bg-secondary);&#10;            border: none;&#10;            padding: 12px 24px;&#10;            border-radius: 8px;&#10;            cursor: pointer;&#10;            font-weight: 500;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .btn-secondary:hover {&#10;            background: var(--text-primary);&#10;        }&#10;&#10;        .reviews-section {&#10;            margin-bottom: 50px;&#10;        }&#10;&#10;        .section-title {&#10;            font-size: 1.8em;&#10;            color: var(--text-primary);&#10;            margin-bottom: 25px;&#10;            padding-bottom: 10px;&#10;            border-bottom: 2px solid var(--border);&#10;        }&#10;&#10;        .reviews-grid {&#10;            display: grid;&#10;            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));&#10;            gap: 25px;&#10;        }&#10;&#10;        .review-card {&#10;            background: var(--bg-secondary);&#10;            border-radius: 12px;&#10;            padding: 25px;&#10;            box-shadow: var(--shadow);&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .review-card:hover {&#10;            transform: translateY(-5px);&#10;            box-shadow: 0 10px 25px rgba(0,0,0,0.15);&#10;        }&#10;&#10;        .review-header {&#10;            display: flex;&#10;            justify-content: space-between;&#10;            align-items: flex-start;&#10;            margin-bottom: 15px;&#10;        }&#10;&#10;        .review-user {&#10;            display: flex;&#10;            align-items: center;&#10;            gap: 12px;&#10;        }&#10;&#10;        .user-avatar-small {&#10;            width: 45px;&#10;            height: 45px;&#10;            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);&#10;            border-radius: 50%;&#10;            display: flex;&#10;            align-items: center;&#10;            justify-content: center;&#10;            color: var(--bg-secondary);&#10;            font-weight: 600;&#10;            font-size: 16px;&#10;        }&#10;&#10;        .user-info h4 {&#10;            color: var(--text-primary);&#10;            margin-bottom: 4px;&#10;        }&#10;&#10;        .user-info .review-date {&#10;            color: var(--text-secondary);&#10;            font-size: 0.9em;&#10;        }&#10;&#10;        .review-rating {&#10;            color: var(--accent);&#10;            font-size: 1.3em;&#10;        }&#10;&#10;        .review-title {&#10;            font-size: 1.3em;&#10;            font-weight: 600;&#10;            margin-bottom: 12px;&#10;            color: var(--text-primary);&#10;            line-height: 1.4;&#10;        }&#10;&#10;        .review-comment {&#10;            color: var(--text-secondary);&#10;            line-height: 1.6;&#10;            margin-bottom: 20px;&#10;        }&#10;&#10;        .review-status {&#10;            display: inline-block;&#10;            padding: 4px 12px;&#10;            border-radius: 20px;&#10;            font-size: 0.85em;&#10;            font-weight: 500;&#10;        }&#10;&#10;        .status-approved {&#10;            background: rgba(var(--success-rgb, 34, 197, 94), 0.1);&#10;            color: var(--success);&#10;        }&#10;&#10;        .status-pending {&#10;            background: rgba(var(--accent-rgb, 245, 158, 11), 0.1);&#10;            color: var(--accent);&#10;        }&#10;&#10;        .review-actions {&#10;            display: flex;&#10;            gap: 10px;&#10;            margin-top: 15px;&#10;        }&#10;&#10;        .btn-edit, .btn-delete {&#10;            padding: 8px 16px;&#10;            border: none;&#10;            border-radius: 6px;&#10;            cursor: pointer;&#10;            font-size: 0.9em;&#10;            font-weight: 500;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .btn-edit {&#10;            background: var(--success);&#10;            color: var(--bg-secondary);&#10;        }&#10;&#10;        .btn-edit:hover {&#10;            background: var(--success-dark, #16A34A);&#10;        }&#10;&#10;        .btn-delete {&#10;            background: var(--error);&#10;            color: var(--bg-secondary);&#10;        }&#10;&#10;        .btn-delete:hover {&#10;            background: var(--error-dark, #DC2626);&#10;        }&#10;&#10;        .no-reviews {&#10;            text-align: center;&#10;            padding: 60px 20px;&#10;            background: var(--bg-secondary);&#10;            border-radius: 12px;&#10;            box-shadow: var(--shadow);&#10;        }&#10;&#10;        .no-reviews p {&#10;            font-size: 1.2em;&#10;            color: var(--text-secondary);&#10;            margin-bottom: 20px;&#10;        }&#10;&#10;        /* Footer */&#10;        footer {&#10;            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);&#10;            color: var(--bg-secondary);&#10;            padding: 60px 0 24px;&#10;            margin-top: 60px;&#10;            position: relative;&#10;            overflow: hidden;&#10;        }&#10;&#10;        .footer-content {&#10;            display: grid;&#10;            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));&#10;            gap: 36px;&#10;            margin-bottom: 36px;&#10;        }&#10;&#10;        .footer-column h3 {&#10;            font-size: 20px;&#10;            margin-bottom: 24px;&#10;            font-weight: 600;&#10;        }&#10;&#10;        .footer-column ul {&#10;            list-style: none;&#10;        }&#10;&#10;        .footer-column ul li {&#10;            margin-bottom: 12px;&#10;        }&#10;&#10;        .footer-column a {&#10;            color: var(--text-secondary);&#10;            text-decoration: none;&#10;            transition: var(--transition);&#10;        }&#10;&#10;        .footer-column a:hover {&#10;            color: var(--bg-secondary);&#10;        }&#10;&#10;        .copyright {&#10;            text-align: center;&#10;            padding-top: 24px;&#10;            border-top: 1px solid rgba(255, 255, 255, 0.1);&#10;            color: var(--text-secondary);&#10;            font-size: 14px;&#10;        }&#10;&#10;        /* Success/Error Messages */&#10;        .success-message, .error-message {&#10;            padding: 14px 18px;&#10;            border-radius: 12px;&#10;            margin-bottom: 24px;&#10;            text-align: center;&#10;            display: none;&#10;            font-size: 15px;&#10;        }&#10;&#10;        .success-message {&#10;            background: rgba(var(--success-rgb, 34, 197, 94), 0.1);&#10;            color: var(--success);&#10;            border: 1px solid rgba(var(--success-rgb, 34, 197, 94), 0.2);&#10;        }&#10;&#10;        .error-message {&#10;            background: rgba(var(--error-rgb, 239, 68, 68), 0.1);&#10;            color: var(--error);&#10;            border: 1px solid rgba(var(--error-rgb, 239, 68, 68), 0.2);&#10;        }&#10;&#10;        /* Loading States */&#10;        .loading {&#10;            opacity: 0.7;&#10;            pointer-events: none;&#10;        }&#10;&#10;        /* Responsive Design */&#10;        @media (max-width: 768px) {&#10;            .nav-menu {&#10;                display: none;&#10;            }&#10;&#10;            .reviews-header {&#10;                flex-direction: column;&#10;                gap: 20px;&#10;                text-align: center;&#10;            }&#10;&#10;            .reviews-grid {&#10;                grid-template-columns: 1fr;&#10;            }&#10;&#10;            .review-stats {&#10;                grid-template-columns: 1fr;&#10;            }&#10;&#10;            .form-actions {&#10;                flex-direction: column;&#10;            }&#10;&#10;            .review-header {&#10;                flex-direction: column;&#10;                gap: 10px;&#10;            }&#10;&#10;            .review-actions {&#10;                justify-content: center;&#10;            }&#10;        }&#10;    &lt;/style&gt;&#10;    &lt;script src=&quot;profile-avatar.js&quot;&gt;&lt;/script&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;!-- Header --&gt;&#10;&lt;header&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;div class=&quot;header-top&quot;&gt;&#10;            &lt;a href=&quot;index.html&quot; class=&quot;logo&quot;&gt;&#10;                &lt;i class=&quot;fas fa-home&quot;&gt;&lt;/i&gt;&#10;                PropertyHub&#10;            &lt;/a&gt;&#10;&#10;            &lt;ul class=&quot;nav-menu&quot;&gt;&#10;                &lt;li&gt;&lt;a href=&quot;index.html&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;&#10;                &lt;li&gt;&lt;a href=&quot;buy.html&quot; onclick=&quot;checkAuth('buy')&quot;&gt;Buy&lt;/a&gt;&lt;/li&gt;&#10;                &lt;li&gt;&lt;a href=&quot;Rent.html&quot; onclick=&quot;checkAuth('rent')&quot;&gt;Rent&lt;/a&gt;&lt;/li&gt;&#10;                &lt;li&gt;&lt;a href=&quot;apartment.html&quot; onclick=&quot;checkAuth('sell')&quot;&gt;Sell&lt;/a&gt;&lt;/li&gt;&#10;                &lt;li&gt;&lt;a href=&quot;reviews.html&quot; class=&quot;active&quot;&gt;Reviews&lt;/a&gt;&lt;/li&gt;&#10;                &lt;li&gt;&lt;a href=&quot;dashboard.html&quot; onclick=&quot;checkAuth('dashboard')&quot;&gt;Dashboard&lt;/a&gt;&lt;/li&gt;&#10;            &lt;/ul&gt;&#10;&#10;            &lt;!-- User Account Dropdown --&gt;&#10;            &lt;div class=&quot;user-dropdown&quot; id=&quot;userDropdown&quot;&gt;&#10;                &lt;div class=&quot;user-trigger&quot; onclick=&quot;toggleUserMenu()&quot;&gt;&#10;                    &lt;div class=&quot;user-avatar&quot; id=&quot;user-avatar&quot;&gt;U&lt;/div&gt;&#10;                    &lt;span class=&quot;user-name&quot; id=&quot;user-name&quot;&gt;User&lt;/span&gt;&#10;                    &lt;i class=&quot;fas fa-chevron-down dropdown-arrow&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;user-dropdown-menu&quot; id=&quot;user-menu&quot;&gt;&#10;                    &lt;div class=&quot;dropdown-header&quot;&gt;&#10;                        &lt;div class=&quot;user-avatar-large&quot; id=&quot;user-avatar-large&quot;&gt;U&lt;/div&gt;&#10;                        &lt;div class=&quot;user-details&quot;&gt;&#10;                            &lt;span class=&quot;user-name-large&quot; id=&quot;user-name-large&quot;&gt;User&lt;/span&gt;&#10;                            &lt;span class=&quot;user-email&quot; id=&quot;user-email&quot;&gt;user@email.com&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;dropdown-divider&quot;&gt;&lt;/div&gt;&#10;                    &lt;ul class=&quot;dropdown-menu-items&quot;&gt;&#10;                        &lt;li&gt;&lt;a href=&quot;profile.html&quot;&gt;&lt;i class=&quot;fas fa-user&quot;&gt;&lt;/i&gt; Profile&lt;/a&gt;&lt;/li&gt;&#10;                        &lt;li&gt;&lt;a href=&quot;reviews.html&quot;&gt;&lt;i class=&quot;fas fa-star&quot;&gt;&lt;/i&gt; Reviews&lt;/a&gt;&lt;/li&gt;&#10;                        &lt;li&gt;&lt;a href=&quot;dashboard.html&quot; onclick=&quot;checkAuth('dashboard')&quot;&gt;&lt;i class=&quot;fas fa-tachometer-alt&quot;&gt;&lt;/i&gt; Dashboard&lt;/a&gt;&lt;/li&gt;&#10;                        &lt;li&gt;&lt;a href=&quot;apartment.html&quot; onclick=&quot;checkAuth('sell')&quot;&gt;&lt;i class=&quot;fas fa-home&quot;&gt;&lt;/i&gt; Sell&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;/ul&gt;&#10;                    &lt;div class=&quot;dropdown-footer&quot;&gt;&#10;                        &lt;button class=&quot;btn-logout-dropdown&quot; onclick=&quot;logout()&quot;&gt;&#10;                            &lt;i class=&quot;fas fa-sign-out-alt&quot;&gt;&lt;/i&gt; Logout&#10;                        &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;button id=&quot;theme-toggle&quot; class=&quot;theme-toggle&quot;&gt;&lt;/button&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/header&gt;&#10;&#10;&lt;!-- Reviews Page Content --&gt;&#10;&lt;section class=&quot;reviews-page&quot;&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;!-- Page Header --&gt;&#10;        &lt;div class=&quot;reviews-header&quot;&gt;&#10;            &lt;h1&gt;Customer Reviews&lt;/h1&gt;&#10;            &lt;button class=&quot;btn-primary&quot; onclick=&quot;showReviewForm()&quot; id=&quot;write-review-btn&quot;&gt;&#10;                &lt;i class=&quot;fas fa-plus&quot;&gt;&lt;/i&gt; Write a Review&#10;            &lt;/button&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Review Statistics --&gt;&#10;        &lt;div class=&quot;review-stats&quot; id=&quot;review-stats&quot;&gt;&#10;            &lt;div class=&quot;stat-card&quot;&gt;&#10;                &lt;h3 id=&quot;average-rating&quot;&gt;0.0&lt;/h3&gt;&#10;                &lt;p&gt;Average Rating&lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;stat-card&quot;&gt;&#10;                &lt;h3 id=&quot;total-reviews&quot;&gt;0&lt;/h3&gt;&#10;                &lt;p&gt;Total Reviews&lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;stat-card&quot;&gt;&#10;                &lt;h3 id=&quot;rating-distribution-title&quot;&gt;Rating Distribution&lt;/h3&gt;&#10;                &lt;div class=&quot;rating-distribution&quot; id=&quot;rating-distribution&quot;&gt;&#10;                    &lt;!-- Rating bars will be populated by JavaScript --&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Review Form --&gt;&#10;        &lt;div class=&quot;review-form-container&quot; id=&quot;review-form&quot;&gt;&#10;            &lt;div class=&quot;review-form&quot;&gt;&#10;                &lt;h3&gt;Share Your Experience&lt;/h3&gt;&#10;                &lt;form id=&quot;new-review-form&quot; onsubmit=&quot;submitReview(event)&quot;&gt;&#10;                    &lt;div class=&quot;form-group&quot;&gt;&#10;                        &lt;label&gt;Your Rating&lt;/label&gt;&#10;                        &lt;div class=&quot;star-rating&quot;&gt;&#10;                            &lt;span class=&quot;star&quot; onclick=&quot;setRating(1)&quot;&gt;★&lt;/span&gt;&#10;                            &lt;span class=&quot;star&quot; onclick=&quot;setRating(2)&quot;&gt;★&lt;/span&gt;&#10;                            &lt;span class=&quot;star&quot; onclick=&quot;setRating(3)&quot;&gt;★&lt;/span&gt;&#10;                            &lt;span class=&quot;star&quot; onclick=&quot;setRating(4)&quot;&gt;★&lt;/span&gt;&#10;                            &lt;span class=&quot;star&quot; onclick=&quot;setRating(5)&quot;&gt;★&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;input type=&quot;hidden&quot; id=&quot;rating-value&quot; name=&quot;rating&quot; required&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;form-group&quot;&gt;&#10;                        &lt;label for=&quot;review-title&quot;&gt;Review Title&lt;/label&gt;&#10;                        &lt;input type=&quot;text&quot; id=&quot;review-title&quot; name=&quot;title&quot; placeholder=&quot;Summarize your experience&quot; required maxlength=&quot;200&quot;&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;form-group&quot;&gt;&#10;                        &lt;label for=&quot;review-comment&quot;&gt;Your Review&lt;/label&gt;&#10;                        &lt;textarea id=&quot;review-comment&quot; name=&quot;comment&quot; rows=&quot;5&quot; placeholder=&quot;Share details of your experience with PropertyHub...&quot; required&gt;&lt;/textarea&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;form-group&quot;&gt;&#10;                        &lt;label&gt;Add Photos (Optional)&lt;/label&gt;&#10;                        &lt;div class=&quot;image-upload-container&quot; onclick=&quot;triggerFileInput()&quot;&gt;&#10;                            &lt;div class=&quot;upload-icon&quot;&gt;&#10;                                &lt;i class=&quot;fas fa-cloud-upload-alt&quot;&gt;&lt;/i&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;upload-text&quot;&gt;Click to upload images or drag and drop&lt;/div&gt;&#10;                            &lt;div class=&quot;upload-hint&quot;&gt;PNG, JPG, JPEG up to 5MB each (Max 5 images)&lt;/div&gt;&#10;                            &lt;input type=&quot;file&quot; id=&quot;image-upload&quot; class=&quot;hidden-file-input&quot; multiple accept=&quot;image/*&quot; onchange=&quot;handleFileSelect(event)&quot;&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;image-preview-container&quot; id=&quot;image-previews&quot;&gt;&lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;form-actions&quot;&gt;&#10;                        &lt;button type=&quot;button&quot; class=&quot;btn-secondary&quot; onclick=&quot;hideReviewForm()&quot;&gt;Cancel&lt;/button&gt;&#10;                        &lt;button type=&quot;submit&quot; class=&quot;btn-primary&quot;&gt;Submit Review&lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/form&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Messages --&gt;&#10;        &lt;div class=&quot;success-message&quot; id=&quot;success-message&quot;&gt;&lt;/div&gt;&#10;        &lt;div class=&quot;error-message&quot; id=&quot;error-message&quot;&gt;&lt;/div&gt;&#10;&#10;        &lt;!-- User Reviews Section --&gt;&#10;        &lt;div class=&quot;reviews-section&quot;&gt;&#10;            &lt;h2 class=&quot;section-title&quot;&gt;My Reviews&lt;/h2&gt;&#10;            &lt;div class=&quot;reviews-grid&quot; id=&quot;user-reviews-list&quot;&gt;&#10;                &lt;!-- User reviews will be loaded here --&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Public Reviews Section removed as requested --&gt;&#10;    &lt;/div&gt;&#10;&lt;/section&gt;&#10;&#10;&lt;!-- Footer --&gt;&#10;&lt;footer&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;div class=&quot;footer-content&quot;&gt;&#10;            &lt;div class=&quot;footer-column&quot;&gt;&#10;                &lt;h3&gt;PropertyHub&lt;/h3&gt;&#10;                &lt;p&gt;Your gateway to premium real estate. Discover, rent, and purchase your dream home with our comprehensive property management system.&lt;/p&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;footer-column&quot;&gt;&#10;                &lt;h3&gt;Quick Links&lt;/h3&gt;&#10;                &lt;ul&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;buy.html&quot;&gt;Buy&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;rent.html&quot;&gt;Rent&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;apartment.html&quot;&gt;Sell&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;reviews.html&quot;&gt;Reviews&lt;/a&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;a href=&quot;dashboard.html&quot;&gt;Dashboard&lt;/a&gt;&lt;/li&gt;&#10;                &lt;/ul&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;footer-column&quot;&gt;&#10;                &lt;h3&gt;Contact Us&lt;/h3&gt;&#10;                &lt;ul&gt;&#10;                    &lt;li&gt;&lt;i class=&quot;fas fa-map-marker-alt&quot;&gt;&lt;/i&gt; 123 Real Estate Ave, Tampa, FL&lt;/li&gt;&#10;                    &lt;li&gt;&lt;i class=&quot;fas fa-phone&quot;&gt;&lt;/i&gt; (555) 123-4567&lt;/li&gt;&#10;                    &lt;li&gt;&lt;i class=&quot;fas fa-envelope&quot;&gt;&lt;/i&gt; info@propertyhub.com&lt;/li&gt;&#10;                &lt;/ul&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;copyright&quot;&gt;&#10;            &lt;p&gt;&amp;copy; 2025 PropertyHub. All rights reserved.&lt;/p&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/footer&gt;&#10;&#10;&lt;script&gt;&#10;    // ==================== GLOBAL CONFIGURATION ====================&#10;    const CONFIG = {&#10;        API_BASE_URL: 'http://localhost:8080/api',&#10;        REQUEST_TIMEOUT: 10000&#10;    };&#10;&#10;    // ==================== STATE MANAGEMENT ====================&#10;    let currentUser = null;&#10;    let currentRating = 0;&#10;&#10;    // Authentication management functions&#10;    function isAuthenticated() {&#10;        return sessionStorage.getItem('currentUser') !== null;&#10;    }&#10;&#10;    function getCurrentUser() {&#10;        const userJson = sessionStorage.getItem('currentUser');&#10;        return userJson ? JSON.parse(userJson) : null;&#10;    }&#10;&#10;    // Authentication check for navigation&#10;    function checkAuth(page) {&#10;        const currentUser = JSON.parse(sessionStorage.getItem('currentUser') || 'null');&#10;        if (currentUser) {&#10;            // User is authenticated, redirect to the page&#10;            switch(page) {&#10;                case 'buy':&#10;                    window.location.href = 'buy.html';&#10;                    break;&#10;                case 'rent':&#10;                    window.location.href = 'Rent.html';&#10;                    break;&#10;                case 'sell':&#10;                    window.location.href = 'apartment.html';&#10;                    break;&#10;                case 'dashboard':&#10;                    window.location.href = 'dashboard.html';&#10;                    break;&#10;            }&#10;        } else {&#10;            // User not authenticated, redirect to login page&#10;            window.location.href = 'index.html';&#10;        }&#10;    }&#10;&#10;    function toggleUserMenu() {&#10;        const userMenu = document.getElementById('user-menu');&#10;        const dropdown = document.querySelector('.user-dropdown');&#10;        userMenu.classList.toggle('show');&#10;        dropdown.classList.toggle('active');&#10;    }&#10;&#10;    function updateUserDropdown(user) {&#10;        const authButtons = document.getElementById('auth-buttons');&#10;        if (authButtons) {&#10;            authButtons.style.display = 'none';&#10;        }&#10;        document.getElementById('userDropdown').style.display = 'inline-block';&#10;&#10;        document.getElementById('user-name').textContent = user.name;&#10;        document.getElementById('user-name-large').textContent = user.name;&#10;        document.getElementById('user-email').textContent = user.email;&#10;&#10;        // Update avatars with profile pictures&#10;        updateUserAvatars(user);&#10;&#10;        currentUser = user;&#10;    }&#10;&#10;    function updateUserAvatars(user) {&#10;        const savedPicture = getUserProfilePicture(user.userID);&#10;        const userAvatar = document.getElementById('user-avatar');&#10;        const userAvatarLarge = document.getElementById('user-avatar-large');&#10;&#10;        if (savedPicture) {&#10;            // Replace with image elements&#10;            userAvatar.innerHTML = `&lt;img src=&quot;${savedPicture}&quot; style=&quot;width: 100%; height: 100%; border-radius: 50%; object-fit: cover;&quot; alt=&quot;Profile&quot;&gt;`;&#10;            userAvatarLarge.innerHTML = `&lt;img src=&quot;${savedPicture}&quot; style=&quot;width: 100%; height: 100%; border-radius: 50%; object-fit: cover;&quot; alt=&quot;Profile&quot;&gt;`;&#10;        } else {&#10;            // Show initials&#10;            const initials = getUserInitials(user.name);&#10;            userAvatar.textContent = initials;&#10;            userAvatarLarge.textContent = initials;&#10;        }&#10;    }&#10;&#10;    function resetUserDropdown() {&#10;        const authButtons = document.getElementById('auth-buttons');&#10;        if (authButtons) {&#10;            authButtons.style.display = 'flex';&#10;        }&#10;        document.getElementById('userDropdown').style.display = 'none';&#10;        currentUser = null;&#10;    }&#10;&#10;    // ==================== REVIEWS FUNCTIONALITY ====================&#10;    function showReviewForm() {&#10;        if (!isAuthenticated()) {&#10;            alert('Please login to write a review.');&#10;            // Since we don't have an auth modal on this page, redirect to login&#10;            window.location.href = 'index.html?showLogin=true';&#10;            return;&#10;        }&#10;        document.getElementById('review-form').classList.add('show');&#10;    }&#10;&#10;    function hideReviewForm() {&#10;        document.getElementById('review-form').classList.remove('show');&#10;        resetReviewForm();&#10;    }&#10;&#10;    function resetReviewForm() {&#10;        // Reset form fields&#10;        document.getElementById('new-review-form').reset();&#10;        document.getElementById('rating-value').value = '';&#10;&#10;        // Reset star rating display&#10;        const stars = document.querySelectorAll('.star');&#10;        stars.forEach(star =&gt; star.classList.remove('active'));&#10;        currentRating = 0;&#10;&#10;        // Clear uploaded images&#10;        clearImagePreviews();&#10;&#10;        // Reset form title and button text&#10;        document.querySelector('.review-form h3').textContent = 'Share Your Experience';&#10;        document.querySelector('.btn-primary').textContent = 'Submit Review';&#10;&#10;        // Reset editing mode&#10;        editingReviewId = null;&#10;    }&#10;&#10;    function setRating(rating) {&#10;        currentRating = rating;&#10;        const stars = document.querySelectorAll('.star');&#10;        stars.forEach((star, index) =&gt; {&#10;            if (index &lt; rating) {&#10;                star.classList.add('active');&#10;            } else {&#10;                star.classList.remove('active');&#10;            }&#10;        });&#10;        document.getElementById('rating-value').value = rating;&#10;    }&#10;&#10;    // Image Upload Functionality&#10;    let uploadedImages = [];&#10;    const maxImages = 5;&#10;    const maxFileSize = 5 * 1024 * 1024; // 5MB&#10;&#10;    function triggerFileInput() {&#10;        document.getElementById('image-upload').click();&#10;    }&#10;&#10;    function handleFileSelect(event) {&#10;        const files = Array.from(event.target.files);&#10;        processFiles(files);&#10;    }&#10;&#10;    function processFiles(files) {&#10;        files.forEach(file =&gt; {&#10;            if (uploadedImages.length &gt;= maxImages) {&#10;                showErrorMessage(`Maximum ${maxImages} images allowed`);&#10;                return;&#10;            }&#10;&#10;            if (!file.type.startsWith('image/')) {&#10;                showErrorMessage('Please select only image files');&#10;                return;&#10;            }&#10;&#10;            if (file.size &gt; maxFileSize) {&#10;                showErrorMessage('File size should be less than 5MB');&#10;                return;&#10;            }&#10;&#10;            const reader = new FileReader();&#10;            reader.onload = function(e) {&#10;                const imageData = {&#10;                    file: file,&#10;                    url: e.target.result,&#10;                    id: Date.now() + Math.random()&#10;                };&#10;                &#10;                uploadedImages.push(imageData);&#10;                displayImagePreview(imageData);&#10;            };&#10;            reader.readAsDataURL(file);&#10;        });&#10;&#10;        // Clear the file input&#10;        document.getElementById('image-upload').value = '';&#10;    }&#10;&#10;    function displayImagePreview(imageData) {&#10;        const previewContainer = document.getElementById('image-previews');&#10;        &#10;        const previewDiv = document.createElement('div');&#10;        previewDiv.className = 'image-preview';&#10;        previewDiv.setAttribute('data-id', imageData.id);&#10;        &#10;        previewDiv.innerHTML = `&#10;            &lt;img src=&quot;${imageData.url}&quot; alt=&quot;Preview&quot;&gt;&#10;            &lt;button class=&quot;image-remove&quot; onclick=&quot;removeImage(${imageData.id})&quot; type=&quot;button&quot;&gt;&#10;                &lt;i class=&quot;fas fa-times&quot;&gt;&lt;/i&gt;&#10;            &lt;/button&gt;&#10;        `;&#10;        &#10;        previewContainer.appendChild(previewDiv);&#10;    }&#10;&#10;    function removeImage(imageId) {&#10;        // Remove from uploaded images array&#10;        uploadedImages = uploadedImages.filter(img =&gt; img.id !== imageId);&#10;        &#10;        // Remove from DOM&#10;        const previewElement = document.querySelector(`[data-id=&quot;${imageId}&quot;]`);&#10;        if (previewElement) {&#10;            previewElement.remove();&#10;        }&#10;    }&#10;&#10;    function clearImagePreviews() {&#10;        uploadedImages = [];&#10;        document.getElementById('image-previews').innerHTML = '';&#10;    }&#10;&#10;    // Drag and Drop functionality&#10;    function setupDragAndDrop() {&#10;        const uploadContainer = document.querySelector('.image-upload-container');&#10;        &#10;        uploadContainer.addEventListener('dragover', function(e) {&#10;            e.preventDefault();&#10;            uploadContainer.classList.add('drag-over');&#10;        });&#10;        &#10;        uploadContainer.addEventListener('dragleave', function(e) {&#10;            e.preventDefault();&#10;            uploadContainer.classList.remove('drag-over');&#10;        });&#10;        &#10;        uploadContainer.addEventListener('drop', function(e) {&#10;            e.preventDefault();&#10;            uploadContainer.classList.remove('drag-over');&#10;            &#10;            const files = Array.from(e.dataTransfer.files);&#10;            processFiles(files);&#10;        });&#10;    }&#10;&#10;    // Initialize drag and drop when page loads&#10;    document.addEventListener('DOMContentLoaded', function() {&#10;        setupDragAndDrop();&#10;    });&#10;&#10;    async function submitReview(event) {&#10;        event.preventDefault();&#10;&#10;        if (!isAuthenticated()) {&#10;            alert('Please login to submit a review.');&#10;            window.location.href = 'index.html?showLogin=true';&#10;            return;&#10;        }&#10;&#10;        const user = getCurrentUser();&#10;        const formData = new FormData(event.target);&#10;&#10;        const reviewData = {&#10;            rating: parseInt(formData.get('rating')),&#10;            title: formData.get('title'),&#10;            comment: formData.get('comment')&#10;        };&#10;&#10;        if (reviewData.rating &lt; 1 || reviewData.rating &gt; 5) {&#10;            showMessage('error', 'Please select a rating between 1 and 5 stars.');&#10;            return;&#10;        }&#10;&#10;        try {&#10;            let response;&#10;            let successMessage;&#10;            let activityType;&#10;&#10;            if (editingReviewId) {&#10;                // Update existing review by deleting old one and creating new one&#10;                // First delete the old review&#10;                const deleteResponse = await fetch(`${CONFIG.API_BASE_URL}/reviews/${editingReviewId}?userId=${user.userID}`, {&#10;                    method: 'DELETE',&#10;                    headers: {&#10;                        'Authorization': `Bearer ${sessionStorage.getItem('authToken')}`&#10;                    }&#10;                });&#10;&#10;                if (!deleteResponse.ok) {&#10;                    throw new Error('Failed to delete old review');&#10;                }&#10;&#10;                // Then create the new review with updated data&#10;                response = await fetch(`${CONFIG.API_BASE_URL}/reviews/user/${user.userID}`, {&#10;                    method: 'POST',&#10;                    headers: {&#10;                        'Content-Type': 'application/json',&#10;                        'Authorization': `Bearer ${sessionStorage.getItem('authToken')}`&#10;                    },&#10;                    body: JSON.stringify(reviewData)&#10;                });&#10;                successMessage = 'Review updated successfully!';&#10;                activityType = 'Updated review';&#10;            } else {&#10;                // Create new review&#10;                response = await fetch(`${CONFIG.API_BASE_URL}/reviews/user/${user.userID}`, {&#10;                    method: 'POST',&#10;                    headers: {&#10;                        'Content-Type': 'application/json',&#10;                        'Authorization': `Bearer ${sessionStorage.getItem('authToken')}`&#10;                    },&#10;                    body: JSON.stringify(reviewData)&#10;                });&#10;                successMessage = 'Review submitted successfully! It will be visible after approval.';&#10;                activityType = 'Submitted new review';&#10;            }&#10;&#10;            const result = await response.json();&#10;&#10;            if (response.ok) {&#10;                showMessage('success', successMessage);&#10;                hideReviewForm();&#10;                loadUserReviews();&#10;                loadReviewStats();&#10;                trackUserActivity('review', activityType, reviewData);&#10;&#10;                // Reset editing mode&#10;                editingReviewId = null;&#10;                resetReviewForm();&#10;            } else {&#10;                showMessage('error', 'Failed to ' + (editingReviewId ? 'update' : 'submit') + ' review: ' + (result.error || 'Unknown error'));&#10;            }&#10;        } catch (error) {&#10;            console.error('Submit review error:', error);&#10;            showMessage('error', 'Failed to ' + (editingReviewId ? 'update' : 'submit') + ' review. Please try again.');&#10;        }&#10;    }&#10;&#10;    async function loadUserReviews() {&#10;        if (!isAuthenticated()) {&#10;            document.getElementById('user-reviews-list').innerHTML = `&#10;                &lt;div class=&quot;no-reviews&quot;&gt;&#10;                    &lt;p&gt;Please login to view your reviews&lt;/p&gt;&#10;                &lt;/div&gt;&#10;            `;&#10;            return;&#10;        }&#10;&#10;        const user = getCurrentUser();&#10;&#10;        try {&#10;            const response = await fetch(`${CONFIG.API_BASE_URL}/reviews/user/${user.userID}`, {&#10;                headers: {&#10;                    'Authorization': `Bearer ${sessionStorage.getItem('authToken')}`&#10;                }&#10;            });&#10;&#10;            if (!response.ok) throw new Error('Failed to load user reviews');&#10;&#10;            const reviews = await response.json();&#10;            displayUserReviews(reviews);&#10;        } catch (error) {&#10;            console.error('Load user reviews error:', error);&#10;            document.getElementById('user-reviews-list').innerHTML = `&#10;                &lt;div class=&quot;no-reviews&quot;&gt;&#10;                    &lt;p&gt;Error loading your reviews. Please try again later.&lt;/p&gt;&#10;                &lt;/div&gt;&#10;            `;&#10;        }&#10;    }&#10;&#10;    async function loadReviewStats() {&#10;        try {&#10;            // First get average rating&#10;            const avgResponse = await fetch(`${CONFIG.API_BASE_URL}/reviews/stats/average`);&#10;            // Then get total reviews count for each rating (1-5)&#10;            const countPromises = [];&#10;            for (let i = 1; i &lt;= 5; i++) {&#10;                countPromises.push(fetch(`${CONFIG.API_BASE_URL}/reviews/stats/count/${i}`));&#10;            }&#10;&#10;            const countResponses = await Promise.all(countPromises);&#10;            const countResults = await Promise.all(countResponses.map(r =&gt; r.json()));&#10;&#10;            const avgResult = await avgResponse.json();&#10;&#10;            // Combine the data&#10;            const stats = {&#10;                averageRating: avgResult.toFixed(1),&#10;                totalReviews: countResults.reduce((sum, curr) =&gt; sum + curr, 0),&#10;                rating1Count: countResults[0],&#10;                rating2Count: countResults[1],&#10;                rating3Count: countResults[2],&#10;                rating4Count: countResults[3],&#10;                rating5Count: countResults[4]&#10;            };&#10;&#10;            displayReviewStats(stats);&#10;        } catch (error) {&#10;            console.error('Load review stats error:', error);&#10;            // Display default stats&#10;            displayReviewStats({&#10;                averageRating: '0.0',&#10;                totalReviews: 0,&#10;                rating1Count: 0,&#10;                rating2Count: 0,&#10;                rating3Count: 0,&#10;                rating4Count: 0,&#10;                rating5Count: 0&#10;            });&#10;        }&#10;    }&#10;&#10;    function displayUserReviews(reviews) {&#10;        const container = document.getElementById('user-reviews-list');&#10;&#10;        if (reviews.length === 0) {&#10;            container.innerHTML = `&#10;                &lt;div class=&quot;no-reviews&quot;&gt;&#10;                    &lt;p&gt;You haven't written any reviews yet.&lt;/p&gt;&#10;                    &lt;button class=&quot;btn-primary&quot; onclick=&quot;showReviewForm()&quot;&gt;Write Your First Review&lt;/button&gt;&#10;                &lt;/div&gt;&#10;            `;&#10;            return;&#10;        }&#10;&#10;        container.innerHTML = reviews.map(review =&gt; `&#10;            &lt;div class=&quot;review-card&quot; data-review-id=&quot;${review.reviewID}&quot;&gt;&#10;                &lt;div class=&quot;review-header&quot;&gt;&#10;                    &lt;div class=&quot;review-user&quot;&gt;&#10;                        &lt;div class=&quot;user-avatar-small&quot;&gt;&#10;                            ${review.user.name ? review.user.name.charAt(0).toUpperCase() : 'U'}&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;user-info&quot;&gt;&#10;                            &lt;h4&gt;${review.user.name || 'User'}&lt;/h4&gt;&#10;                            &lt;div class=&quot;review-date&quot;&gt;${formatDate(review.createdAt)}&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;review-rating&quot;&gt;&#10;                        ${Array.from({length: 5}, (_, i) =&gt;&#10;                            `&lt;span class=&quot;star ${i &lt; review.rating ? 'filled' : ''}&quot;&gt;${i &lt; review.rating ? '★' : '☆'}&lt;/span&gt;`&#10;                        ).join('')}&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;review-title&quot;&gt;${review.title}&lt;/div&gt;&#10;                &lt;div class=&quot;review-text&quot;&gt;${review.comment}&lt;/div&gt;&#10;                &lt;div class=&quot;review-status ${review.isApproved ? 'status-approved' : 'status-pending'}&quot;&gt;&#10;                    ${review.isApproved ? '✓ Approved' : '⏳ Pending Approval'}&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;review-actions&quot;&gt;&#10;                    &lt;button class=&quot;btn-edit&quot; onclick=&quot;editReview(${review.reviewID})&quot;&gt;Edit&lt;/button&gt;&#10;                    &lt;button class=&quot;btn-delete&quot; onclick=&quot;deleteReview(${review.reviewID})&quot;&gt;Delete&lt;/button&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        `).join('');&#10;    }&#10;&#10;    function displayReviewStats(stats) {&#10;        document.getElementById('average-rating').textContent = stats.averageRating || '0.0';&#10;        document.getElementById('total-reviews').textContent = stats.totalReviews || '0';&#10;&#10;        // Display rating distribution&#10;        const distributionContainer = document.getElementById('rating-distribution');&#10;        let totalReviews = stats.totalReviews || 1; // Avoid division by zero&#10;&#10;        distributionContainer.innerHTML = '';&#10;        for (let i = 5; i &gt;= 1; i--) {&#10;            const count = stats[`rating${i}Count`] || 0;&#10;            const percentage = totalReviews &gt; 0 ? (count / totalReviews) * 100 : 0;&#10;&#10;            distributionContainer.innerHTML += `&#10;                &lt;div class=&quot;rating-bar&quot;&gt;&#10;                    &lt;div class=&quot;rating-stars&quot;&gt;${'★'.repeat(i)}&lt;/div&gt;&#10;                    &lt;div class=&quot;rating-progress&quot;&gt;&#10;                        &lt;div class=&quot;rating-fill&quot; style=&quot;width: ${percentage}%&quot;&gt;&lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;rating-count&quot;&gt;${count}&lt;/div&gt;&#10;                &lt;/div&gt;&#10;            `;&#10;        }&#10;    }&#10;&#10;    let editingReviewId = null;&#10;&#10;    async function editReview(reviewId) {&#10;        try {&#10;            // Find the review in the current reviews list&#10;            const reviewElement = document.querySelector(`[data-review-id=&quot;${reviewId}&quot;]`);&#10;            if (!reviewElement) {&#10;                showMessage('error', 'Review not found');&#10;                return;&#10;            }&#10;&#10;            // Extract current review data from the DOM&#10;            const titleElement = reviewElement.querySelector('.review-title');&#10;            const commentElement = reviewElement.querySelector('.review-text');&#10;            const ratingElement = reviewElement.querySelector('.review-rating');&#10;&#10;            if (!titleElement || !commentElement || !ratingElement) {&#10;                showMessage('error', 'Unable to load review data');&#10;                return;&#10;            }&#10;&#10;            const currentTitle = titleElement.textContent.trim();&#10;            const currentComment = commentElement.textContent.trim();&#10;            const currentRating = ratingElement.querySelectorAll('.star.filled').length;&#10;&#10;            // Set editing mode&#10;            editingReviewId = reviewId;&#10;&#10;            // Populate the form with current values&#10;            document.getElementById('review-title').value = currentTitle;&#10;            document.getElementById('review-comment').value = currentComment;&#10;            document.getElementById('rating-value').value = currentRating;&#10;&#10;            // Update star rating display&#10;            setRating(currentRating);&#10;&#10;            // Update form title and button text&#10;            document.querySelector('.review-form h3').textContent = 'Edit Your Review';&#10;            document.querySelector('.btn-primary').textContent = 'Update Review';&#10;&#10;            // Show the form&#10;            showReviewForm();&#10;&#10;        } catch (error) {&#10;            console.error('Error loading review for editing:', error);&#10;            showMessage('error', 'Failed to load review for editing');&#10;        }&#10;    }&#10;&#10;    async function deleteReview(reviewId) {&#10;        if (!confirm('Are you sure you want to delete this review?')) {&#10;            return;&#10;        }&#10;&#10;        try {&#10;            const response = await fetch(`${CONFIG.API_BASE_URL}/reviews/${reviewId}?userId=${getCurrentUser().userID}`, {&#10;                method: 'DELETE',&#10;                headers: {&#10;                    'Authorization': `Bearer ${sessionStorage.getItem('authToken')}`&#10;                }&#10;            });&#10;&#10;            if (response.ok) {&#10;                showMessage('success', 'Review deleted successfully!');&#10;                loadUserReviews();&#10;                loadReviewStats();&#10;                trackUserActivity('review', 'Deleted review', { reviewId });&#10;            } else {&#10;                throw new Error('Failed to delete review');&#10;            }&#10;        } catch (error) {&#10;            console.error('Delete review error:', error);&#10;            showMessage('error', 'Failed to delete review. Please try again.');&#10;        }&#10;    }&#10;&#10;    // ==================== UTILITY FUNCTIONS ====================&#10;    function formatDate(dateString) {&#10;        return new Date(dateString).toLocaleDateString('en-US', {&#10;            year: 'numeric',&#10;            month: 'long',&#10;            day: 'numeric'&#10;        });&#10;    }&#10;&#10;    function showMessage(type, message) {&#10;        const successEl = document.getElementById('success-message');&#10;        const errorEl = document.getElementById('error-message');&#10;&#10;        if (type === 'success') {&#10;            successEl.textContent = message;&#10;            successEl.style.display = 'block';&#10;            errorEl.style.display = 'none';&#10;&#10;            setTimeout(() =&gt; {&#10;                successEl.style.display = 'none';&#10;            }, 5000);&#10;        } else {&#10;            errorEl.textContent = message;&#10;            errorEl.style.display = 'block';&#10;            successEl.style.display = 'none';&#10;        }&#10;    }&#10;&#10;    async function trackUserActivity(activityType, description, relatedData = null) {&#10;        const user = getCurrentUser();&#10;        if (!user) return;&#10;&#10;        const activity = {&#10;            userID: user.userID,&#10;            activityType: activityType,&#10;            description: description,&#10;            relatedData: relatedData ? JSON.stringify(relatedData) : null&#10;        };&#10;&#10;        try {&#10;            await fetch(`${CONFIG.API_BASE_URL}/user/activity`, {&#10;                method: 'POST',&#10;                headers: {&#10;                    'Content-Type': 'application/json',&#10;                    'Authorization': `Bearer ${sessionStorage.getItem('authToken')}`&#10;                },&#10;                body: JSON.stringify(activity)&#10;            });&#10;        } catch (error) {&#10;            console.error('Failed to track activity:', error);&#10;        }&#10;    }&#10;&#10;    function logout() {&#10;        if (confirm('Are you sure you want to logout?')) {&#10;            if (currentUser) {&#10;                trackUserActivity('authentication', 'User logged out');&#10;            }&#10;&#10;            sessionStorage.removeItem('currentUser');&#10;            sessionStorage.removeItem('authToken');&#10;            resetUserDropdown();&#10;&#10;            // Reload the page to reset state&#10;            location.reload();&#10;        }&#10;    }&#10;&#10;    // ==================== THEME MANAGEMENT ====================&#10;    function setTheme(theme) {&#10;        document.documentElement.setAttribute('data-theme', theme);&#10;        localStorage.setItem('theme', theme);&#10;        const toggleButton = document.getElementById('theme-toggle');&#10;        if (toggleButton) {&#10;            toggleButton.innerHTML = theme === 'dark' ? '&lt;i class=&quot;fas fa-sun&quot;&gt;&lt;/i&gt;' : '&lt;i class=&quot;fas fa-moon&quot;&gt;&lt;/i&gt;';&#10;        }&#10;        document.body.classList.add('theme-transition');&#10;        setTimeout(() =&gt; document.body.classList.remove('theme-transition'), 300);&#10;    }&#10;&#10;    function toggleTheme() {&#10;        const currentTheme = document.documentElement.getAttribute('data-theme') || 'light';&#10;        const newTheme = currentTheme === 'light' ? 'dark' : 'light';&#10;        setTheme(newTheme);&#10;        trackUserActivity('theme', `Switched to ${newTheme} mode`);&#10;    }&#10;&#10;    function initializeTheme() {&#10;        const savedTheme = localStorage.getItem('theme');&#10;        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;&#10;        const theme = savedTheme || (prefersDark ? 'dark' : 'light');&#10;        setTheme(theme);&#10;    }&#10;&#10;    // ==================== INITIALIZATION ====================&#10;    function initializePage() {&#10;        initializeTheme();&#10;        // Check if user is already logged in&#10;        const savedUser = sessionStorage.getItem('currentUser');&#10;        if (savedUser) {&#10;            const user = JSON.parse(savedUser);&#10;            updateUserDropdown(user);&#10;        }&#10;&#10;        // Load reviews data&#10;        loadUserReviews();&#10;        loadReviewStats();&#10;&#10;        // Close dropdown when clicking outside&#10;        document.addEventListener('click', function(e) {&#10;            const dropdown = document.getElementById('userDropdown');&#10;            if (dropdown &amp;&amp; !dropdown.contains(e.target)) {&#10;                document.getElementById('user-menu').classList.remove('show');&#10;                dropdown.classList.remove('active');&#10;            }&#10;        });&#10;    }&#10;&#10;    // Start the application&#10;    document.addEventListener('DOMContentLoaded', initializePage);&#10;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;&#10;&#10;&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>